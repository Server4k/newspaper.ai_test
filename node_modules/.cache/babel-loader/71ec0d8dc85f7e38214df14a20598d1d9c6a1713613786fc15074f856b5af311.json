{"ast":null,"code":"var _jsxFileName = \"/Users/abhigyan/Downloads/project/newspaper.ai_react/newspaper/src/Article.js\";\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Article({\n  article\n}) {\n  // Function to format time difference\n  const getTimeDifference = publishedAt => {\n    const now = new Date();\n    const publishedTime = new Date(publishedAt);\n\n    // Set both dates to midnight (00:00) to check if they are on the same day\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const publishedDate = new Date(publishedTime.getFullYear(), publishedTime.getMonth(), publishedTime.getDate());\n\n    // Check if the article was published today\n    if (today.getTime() === publishedDate.getTime()) {\n      const diffInMs = now - publishedTime;\n      const seconds = Math.floor(diffInMs / 1000);\n      const minutes = Math.floor(seconds / 60);\n      const hours = Math.floor(minutes / 60);\n      if (hours > 0) {\n        return `${hours} hr ${minutes % 60} min ago`;\n      } else if (minutes > 0) {\n        return `${minutes} min ago`;\n      } else {\n        return `${seconds} sec ago`;\n      }\n    } else {\n      // If the article was not published today, show the full date and time\n      return `Published on: ${publishedTime.toLocaleString()}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"article-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tittle_div\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: article.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"tittle\",\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \" \", article.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"publish\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Published:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \" \", getTimeDifference(article.published_at)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"news\",\n      children: article.news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Article","article","getTimeDifference","publishedAt","now","Date","publishedTime","today","getFullYear","getMonth","getDate","publishedDate","getTime","diffInMs","seconds","Math","floor","minutes","hours","toLocaleString","className","children","href","url","target","rel","title","fileName","_jsxFileName","lineNumber","columnNumber","category","published_at","news","_c","$RefreshReg$"],"sources":["/Users/abhigyan/Downloads/project/newspaper.ai_react/newspaper/src/Article.js"],"sourcesContent":["import './HomePage.css';\n\nfunction Article({ article }) {\n    // Function to format time difference\n    const getTimeDifference = (publishedAt) => {\n        const now = new Date();\n        const publishedTime = new Date(publishedAt);\n        \n        // Set both dates to midnight (00:00) to check if they are on the same day\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n        const publishedDate = new Date(publishedTime.getFullYear(), publishedTime.getMonth(), publishedTime.getDate());\n\n        // Check if the article was published today\n        if (today.getTime() === publishedDate.getTime()) {\n            const diffInMs = now - publishedTime;\n            const seconds = Math.floor(diffInMs / 1000);\n            const minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n\n            if (hours > 0) {\n                return `${hours} hr ${minutes % 60} min ago`;\n            } else if (minutes > 0) {\n                return `${minutes} min ago`;\n            } else {\n                return `${seconds} sec ago`;\n            }\n        } else {\n            // If the article was not published today, show the full date and time\n            return `Published on: ${publishedTime.toLocaleString()}`;\n        }\n    };\n\n    return (\n        <div className=\"article-card\">\n            <div className='tittle_div'>\n                <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"tittle\">\n                    {article.title}\n                </a>\n            </div>\n            <p className='category'>\n                <strong>Category:</strong> {article.category}\n            </p>\n            <p className='publish'>\n                <strong>Published:</strong> {getTimeDifference(article.published_at)}\n            </p>\n            <p className='news'>{article.news}</p>\n            <hr />\n        </div>\n    );\n}\n\nexport default Article;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}