[
    {
        "title": "\"They are nowhere near being modest until...\": IITian's Humorous Take Sparks Debate",
        "description": "The IITian's humorous post about the modesty of IIT alumni has sparked conversation on X, drawing attention from users including author Ankur Warikoo. Warikoo chimed in with a story about an unassuming IIT graduate working at Hindustan Unilever (HUL) who left a lasting impression on him, further fueling the discussion.",
        "url": "https://www.businesstoday.in/latest/trends/story/they-are-nowhere-near-being-modest-until-iitians-humorous-take-on-modesty-sparks-debate-among-netizens-ankur-warikoo-weighs-in-449275-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T15:45:26+00:00",
        "category": "business",
        "news": "An IIT alumnus's satirical tweet about IIT graduates being \"modest creatures\" has sparked debate on X. The post, which mocked the tendency of some IIT graduates to downplay their prestigious education, caught the attention of author Ankur Warikoo.\n\nWarikoo shared his own experience meeting a young man on a flight who, despite being an IIT and IIM graduate working at Hindustan Unilever, never mentioned his impressive credentials. This spurred further discussion about the modesty (or lack thereof) of IIT alumni.\n\nWhile some users shared anecdotes of their own encounters with unassuming IIT graduates, others pointed out that not all IITians are equally modest. Some argued that only those who didn't choose their field of study based solely on prestige truly exhibit humility.\n\nThis humorous yet insightful exchange highlights the ongoing debate surrounding the culture and perceived arrogance of IIT graduates, with some arguing that true modesty lies in acknowledging one's achievements without bragging, while others believe that a genuine lack of arrogance is a more nuanced and less common trait."
    },
    {
        "title": "Hyderabad Cop's Lamborgini Photo Op Sparks Online Buzz",
        "description": "The officer, clearly thrilled, hesitated at first, admitting he wasn’t sure how to enter such a high-end vehicle. He even asked a fellow officer to snap a photo, capturing the light-hearted moment.",
        "url": "https://www.businesstoday.in/latest/trends/story/police-wale-ko-baithna-bhi-nahi-aa-raha-netizens-react-after-hyderabad-cop-stops-lamborghini-for-inspection-ends-up-clicking-pictures-449271-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T14:41:38+00:00",
        "category": "business",
        "news": "A routine traffic stop in Hyderabad turned into a heartwarming moment when a police officer was offered the chance to sit in a Lamborghini. The officer, clearly excited, was initially unsure how to enter the high-end vehicle, leading to a light-hearted moment captured in a photo.  The encounter was shared online by the Lamborghini owner, Nishant Saboo, garnering millions of views and positive comments.  While many praised the officer's enthusiasm and Saboo's generosity, one humorous comment captured the moment perfectly, \"Police wale ko baithna bhi nahi aa raha\" (the policeman doesn't even know how to sit). This lighthearted interaction has brought a touch of joy to social media, highlighting a common passion for luxury cars even among those in uniform."
    },
    {
        "title": "Global Food Prices Rise, Worrying India's Central Bank",
        "description": "According to its latest data , the FFPI stood at 124.4 points in September 2024, up 3 percent from August and marking the largest month-on-month increase since March 2022.",
        "url": "https://www.businesstoday.in/latest/economy/story/rbi-mpc-meet-the-sudden-movement-of-a-global-index-has-shaktikanta-das-co-worried-449268-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T13:58:07+00:00",
        "category": "business",
        "news": "The FAO Food Price Index (FFPI) surged by 3% in September 2024, marking its largest monthly increase since March 2022. This sharp rise has triggered concerns within the Reserve Bank of India's (RBI) monetary policy committee, particularly due to India's reliance on imports for essential commodities like vegetable oils and wheat. \n\nThe FFPI tracks global prices for key food products including cereals, vegetable oils, dairy products, meat, and sugar. The recent surge has been attributed to the ongoing Israel-West Asia conflict, which is disrupting global supply chains and driving up prices. \n\nThe RBI, which had previously anticipated a decline in global food prices, is now facing renewed pressure to manage inflation. The conflict's impact on commodity prices and currency depreciation is likely to keep inflationary pressures elevated, potentially forcing the RBI to reconsider its current monetary policy stance. \n\nThe upcoming MPC meeting will be crucial in determining the RBI's response to this evolving situation, particularly as new external members are set to join the committee. Their views on interest rates and inflation will be closely watched."
    },
    {
        "title": "\"I'm Called Useless\": Government Bank Employee Reveals Crushing Pressure",
        "description": "He described the constant barrage of calls from superiors, demanding updates on targets and performance. The relentless pressure, coupled with long working hours and a lack of work-life balance, has taken a toll on their mental and physical health.",
        "url": "https://www.businesstoday.in/latest/trends/story/im-called-useless-govt-bank-employee-gets-30-35-calls-everyday-shares-frustration-over-constant-target-pressure-449264-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T13:33:34+00:00",
        "category": "business",
        "news": "A government bank employee, who wishes to remain anonymous, has spoken out about the intense pressure he faces in his job. He receives up to 35 calls per day from superiors demanding updates on targets and performance. \n\nThis relentless pressure, coupled with long working hours, is taking a toll on his mental and physical health. He feels like he's a call centre employee, constantly bombarded with calls that remind him of his perceived “uselessness”.\n\nHis responsibilities include opening high-net-worth individual (HNI) accounts, overseeing daily operations, and promoting loans and other financial products. He also handles older loan cases, such as a 2005 loan case he’s currently reviewing.\n\nThis story highlights a growing concern about employee well-being in India’s banking sector, where achieving targets seems to take precedence over employee mental health."
    },
    {
        "title": "Sanjay Leela Bhansali Reflects on Vidhu Vinod Chopra's First Wife and Crafting Emotion in Films",
        "description": "Sanjay Leela Bhansali Opens Up About Vidhu Vinod Chopra's First Wife: 'She Forced Him To...'&nbsp;&nbsp;News18Sanjay Leela Bhansali talks about crafting emotion in 'Bajirao Mastani' and others for the audience&nbsp;&nbsp;TOI EtimesSanjay Leela Bhansali recalls his childhood: ‘Blessed to be born in 300 square-feet, colourless chawl’&nbsp;&nbsp;The Indian ExpressLove And War director Sanjay Leela Bhansali on his desire to make films like Raj Kapoor; 'He’s always seated behind me...'&nbsp;&nbsp;PINKVILLASanjay Leela Bhansali On His Childhood: I Am Very Cursed And Very Blessed...&nbsp;&nbsp;...",
        "url": "https://news.google.com/rss/articles/CBMixwFBVV95cUxQTllyRGdWd3FiWmMzaFFTd204Vmg3QnUzbjN2eGxPVEI4Y0QxcENWTS1VSkd4MGNCb3YxVlZSMDJONlZDVUdwcFdKV3dqbVp5dDk5eFFoVXk5X0lWVlNsSW1STjVyUUVLXzktY3hJbzRBWml5ZnNtenpxWENoaldPQmZTVWNkeDNpa0ZlNEFKOEdrUFVFMTg0UElqVS1yYTBackxxdkJaN2lZSnlBa3BoS2pjdmhwRVp4Z2g4SzFQMXRWME0tOGdn0gHMAUFVX3lxTE9HaDAxMVNiM2NkVVVyUFNfU2JkSGRtZ3pXNGZUX3pZak1qMUxvZkkzN0lCb3BDSHduT0dWcUxRQk1EQkw1dWFVMG5zNXZQenF0U2JMQzRkNE9MRGQxSVp1azBnZUk4T1N3ZlFOM3JuSnVXNkxCNm1obnhwaEdRVExHZlJpeWJacnlteUl0UU52eHlTVEdoaVoxWlh2Sk1EX252XzFYalZkcmRIcjhndEhUQ05lSjk1NlNMOC01MmxzOEpJaXdZYS1jZWZyYQ?oc=5",
        "published_at": "2024-10-08T12:27:09+00:00",
        "category": "entertainment",
        "news": "Filmmaker Sanjay Leela Bhansali recently opened up about the emotional intensity he brings to his films, particularly his acclaimed \"Bajirao Mastani.\"  He revealed that his approach stems from his own personal experiences and a desire to resonate with audiences on a deeper level. \n\nBhansali also shed light on his early life, recalling his childhood in a small, \"colourless chawl.\" He described it as a blessing and a curse, suggesting that it shaped his perspective and fueled his passion for storytelling. \n\nWhile discussing his creative process, Bhansali spoke about his admiration for legendary filmmaker Raj Kapoor. He described Kapoor as a constant inspiration, saying, \"He's always seated behind me...\" \n\nHowever, a particularly intriguing detail emerged when Bhansali discussed his relationship with fellow filmmaker Vidhu Vinod Chopra. He claimed that Chopra's first wife, whose name wasn't disclosed, had \"forced\" Chopra to produce a specific film against his wishes. While the specifics of this claim remain unclear, it highlights a complex dynamic between the two filmmakers."
    },
    {
        "title": "Volkswagen Offering Huge Discounts in October 2024: Virtus, Taigun, and Tiguan",
        "description": "Volkswagen दे रही October 2024 में तगड़ा Discount, Virtus, Taigun और Tiguan पर हो सकती है लाखों रुपये की बचत&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)शानदार लुक वाली Kia की इस कार का जल्द होगा बाज़ार में इस दिवाली आगमन&nbsp;&nbsp;Dailynews24Creta को टक्कर देने वाली इस एसयूवी पर मिल रहा बंपर डिस्काउंट&nbsp;&nbsp;...",
        "url": "https://news.google.com/rss/articles/CBMi9gFBVV95cUxObk13YmdkYVU0MGdfWWdRbUFKNDBWeDIyMk1oLWVxeEhVRGJleEtwUTJOLWx5VlZDbDFMWHlYSkhFMVdFREFuUWxXLVZELU44Z0FhOHBvOVlVcDFkTEM2RVFISjgxNWVETm1lYWxZZGdKM2k3Q05CaVdkRDFtVnh1dTJpcTNlSkxkaUtpMEZsSy01eW93WGVjLW5nYVZ0OEFJQTRNc0F0ckU5QXNXVXl0R2d5NVZUQzBkSVp2aFprQjg5cmhYZU1HanEwcXZnMnNNeWVRUU1NN0ZsQWFfZ3FQSmtPZ2g2YTFUMndfNmotd0ZJaGJqTUE?oc=5",
        "published_at": "2024-10-08T12:26:23+00:00",
        "category": "business",
        "news": "Volkswagen is set to offer significant discounts on its popular models, including the Virtus, Taigun, and Tiguan, in October 2024.  This could lead to potential savings of lakhs of rupees for buyers. \n\nWhile specific discount details haven't been released, this move signals a strong push by Volkswagen to boost sales in the Indian market."
    },
    {
        "title": "One Year Later: 28% GST Review Remains Top Priority for Online Gaming Companies",
        "description": "One year on, 28% GST review remains top of wish list for online gaming companies",
        "url": "https://www.businesstoday.in/latest/economy/story/one-year-on-28-gst-review-remains-top-of-wish-list-for-online-gaming-companies-449211-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T09:53:59+00:00",
        "category": "business",
        "news": "One year after the implementation of a 28% Goods and Services Tax (GST) on online gaming, the industry is calling for a review of the policy. While companies and consumers have absorbed the higher tax rate, the impact on profitability remains a key concern. \n\nDeepak Gullapalli, Founder and CEO of A23, a skill gaming platform with over 70 million users, highlighted that despite collecting GST from customers, the burden ultimately falls on the company. This has led to a significant decrease in margins. A23 previously enjoyed a 25-30% margin, now reporting a near-flat margin. \n\nGullapalli expressed hope that the government will consider reviewing the tax rate, especially after reviewing financial filings from online gaming companies. The industry is also advocating for whitelisting of legitimate gaming operations and apps, which could benefit consumers. \n\nDespite these challenges, A23 remains optimistic about the future, with a recent launch of a 100-day online rummy event expected to increase engagement and customer acquisition. The company also emphasizes its commitment to responsible gaming practices, including self-exclusion measures and a strong code of conduct."
    },
    {
        "title": "Viral \"Bhabhi\" Enters Bigg Boss 18, Warns Boys to \"Beware\"",
        "description": "सलमान खान होस्टेड BB18 में वायरल भाभी की एंट्री: बोलीं- घर में अपमान बर्दाश्त नहीं करूंगी, लड़के बचकर रहे, ऑ...&nbsp;&nbsp;Dainik Bhaskarधमाकेदार नाग‍िन डांस से उड़ाए अंकल-आंट‍ियों के होश, कौन हैं मुरादाबाद की वायरल भाभी?&nbsp;&nbsp;Aaj TakBigg Boss 18...",
        "url": "https://news.google.com/rss/articles/CBMitAFBVV95cUxOSVNHOUZtV1VhNXZhS2lrTzJ1RGM1bGFpV05ZbmVIRFFsd0RQZnljdWczYVJXTjZiekNtQ3BuaVpFNWs0Zlhwa0xnV1F4VDlfeGhuazdQUF9HVDZJRGs1eEJEOFFCODFKdU1kaExCMFBrNUhHVnV4LXlfX2ZDSmx5UzNzd1RUWDFURzNxUi1WQS05d1oycWpHUTF2eUtaLTItNnhGLVFRd2hRWG9MUFlzUmNZVHDSAboBQVVfeXFMUHVRaFRHS0p4RV9xSWx4Unh0MWpOT2JFRmVQd2VEU3l4N050Z2RWaW9BdE0xa0gtSUZ4V3pCcWJSS0tDQ2xCU29mZ2JET2U2eFhNdkNHdkg1X29YdHNKbEpNWF9VRjJqVmM3TDU3OVVtR0ozZFdnUmVNdlRZNGY3dWhhTTFkRlA1a2dpM05ocm9pcDlKSkJVeFpmOTJzc0NnSFF3NXVsQjJockxrMUZySGpjc3c3SHVjYlBB?oc=5",
        "published_at": "2024-10-08T09:51:46+00:00",
        "category": "entertainment",
        "news": "The latest season of Salman Khan-hosted \"Bigg Boss\" has welcomed a new and controversial contestant: a viral \"Bhabhi\" from Moradabad. Known for her captivating \"naagin\" dance moves, she made a dramatic entry into the house, leaving viewers in awe and the male contestants on edge. \n\nIn a statement, the \"Bhabhi\" declared she will not tolerate any disrespect within the house, warning the male contestants to be careful. Her bold declaration and fiery persona have already ignited anticipation for her stay in the Bigg Boss house."
    },
    {
        "title": "5G Smartphone with 6000 mAh Battery and 50MP Camera Available for Just ₹12,999",
        "description": "6000 mAh बैटरी, 50MP प्राइमरी कैमरा वाला 5G फोन सिर्फ 12999 रुपये में खरीदें, तगड़ी हैं खूबियां&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)12GB रैम, 50MP सेल्फी और 4600mAh बैटरी वाले Vivo V29 5G पर धमाल ऑफर, सस्ते में खरीद लाएं घर&nbsp;&nbsp;TechlusiveVivo V40e VS Motorola Edge 50 Neo...",
        "url": "https://news.google.com/rss/articles/CBMiyAFBVV95cUxQQ3pGUFAxMmpLNUZ1b01ERmhqakEteXhadzdwc25fOXFNT0dRZS1YcDVvLWtNYW1rbHh2dTI3d01OUkNSNTFvTzVGR1ctU1AweE44Y0JHcENiQ2dHU3NWRDIzZnplX3JfMzc0REE3WXlRZm16UktaOHA0blQzem14MkNzVG0xekw2Zjg2YzJ5djBNRWw0dE9sR3FXWkp2TkEyNG00YlV1NXhETVZ6VWlRaTFFd2FoWWo2LUZHeUhqUTRQOVpPclRUNw?oc=5",
        "published_at": "2024-10-08T09:26:44+00:00",
        "category": "technology",
        "news": "A new 5G smartphone with a powerful 6000 mAh battery and a 50MP primary camera is available for purchase at an incredible price of just ₹12,999. This phone boasts impressive specifications, including a 12GB RAM, 50MP selfie camera, and a 4600 mAh battery. \n\nWhile the article doesn't specify the exact model or brand of the phone, it highlights the impressive features available at an affordable price. \n\n**Key features:**\n\n* 6000 mAh battery\n* 50MP primary camera\n* 12GB RAM\n* 50MP selfie camera\n* 4600 mAh battery\n* 5G connectivity\n\n**Further details on the specific phone model and its availability are not provided in the available text.**"
    },
    {
        "title": "Indian Companies Accused of Sending ₹50,000 Crore to China via Illegal Channels",
        "description": "Several Indian firms are suspected of having violated laws by under-invoicing luxury products such as furniture and gadgets imported from Beijing",
        "url": "https://www.businesstoday.in/latest/corporate/story/rs50000-crore-sent-to-china-via-hawala-ed-cracks-down-on-indian-companies-449179-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T07:26:17+00:00",
        "category": "business",
        "news": "The Enforcement Directorate (ED) is investigating allegations that Indian companies have been sending ₹50,000 crore to Chinese sellers through illegal channels. The suspected practice involves under-invoicing luxury goods like furniture and gadgets imported from China, allowing companies to evade taxes and funnel the remaining payment through hawala networks.\n\nThe ED is probing these activities under the Prevention of Money Laundering Act (PMLA) and is also examining the use of cryptocurrencies in the transactions. Officials believe these companies have violated both anti-money laundering and foreign exchange regulations.\n\nThis investigation marks a wider government effort to combat illegal financial flows and enhance India's economic security. The probe is expected to expand as the ED tracks the suspected misuse of funds and analyzes financial activities related to Chinese imports."
    },
    {
        "title": "India's Economic Growth Shows Signs of Slowing Down",
        "description": "High-frequency indicators suggest a slowdown in the pace of India’s economic growth, from capex to core sector data – weak economic number portend a slowdown in the broader economy",
        "url": "https://www.businesstoday.in/latest/economy/story/signs-the-indian-economy-could-be-slowing-down-449172-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T07:02:49+00:00",
        "category": "business",
        "news": "Recent high-frequency indicators suggest India's economic growth may be slowing down, raising concerns about a potential dip in GDP growth for the July-September quarter of 2024-25.\n\nSeveral economic indicators point to this trend:\n\n* **Capital Expenditure:**  The central government's capital expenditure fell by 30% year-on-year in August and 19.5% in April-August.\n* **Core Sector Output:** Core sector output contracted by 1.8% year-on-year in August, marking the worst performance in 42 months.\n* **Purchasing Managers' Index:**  The manufacturing and services Purchasing Managers' Index for September, while still in expansionary territory, fell to eight and ten-month lows respectively.\n* **Goods and Services Tax (GST) Collections:** GST collections grew by only 6.5% in September, the weakest pace since June 2021.\n* **Automobile Sales:** Overall automobile retail sales declined by 9.3% year-on-year in September. Commercial vehicle sales have fallen for four consecutive months.\n\nThese weakening economic signals have prompted some analysts to predict that GDP growth may have fallen further to 6.0-6.5% in July-September. \n\nWhile the Reserve Bank of India (RBI) forecasted GDP growth at 7.2% for the July-September quarter, concerns are rising, and the RBI may lower its FY25 growth forecast by 10-20 basis points.\n\nThe government has also acknowledged the slowing momentum, citing \"incipient signs of strains in certain sectors.\" \n\nThe coming months will be crucial in determining the extent of the slowdown and the impact it will have on the broader economy."
    },
    {
        "title": "Swiggy \"Kicks Out\" Zomato CEO from Shark Tank, Highlighting Fierce Food Tech Rivalry",
        "description": "The Zomato chief also touched on his company’s rivalry with Swiggy, recalling the moment in 2018 when Swiggy raised $1 billion in a funding round while Zomato was sitting on just $35 million in the bank.",
        "url": "https://www.businesstoday.in/latest/corporate/story/swiggy-kicked-me-out-deepinder-goyal-opens-up-on-shark-tank-exit-and-zomatos-35-million-low-449156-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T05:36:56+00:00",
        "category": "business",
        "news": "Zomato CEO Deepinder Goyal will not be returning as a judge on the upcoming season of Shark Tank India, citing a sponsorship deal between the show and his company's arch-rival, Swiggy. Goyal, who was a popular judge last season, believes the deal prevents him from appearing on the show due to potential conflicts of interest. \n\nThis incident further highlights the intense rivalry between Zomato and Swiggy, two dominant players in India's food delivery and quick commerce sectors. This rivalry dates back to 2018, when Swiggy raised $1 billion in funding, leaving Zomato struggling with only $35 million. This funding gap allowed Swiggy to expand rapidly, widening the gap between the two companies.\n\nDespite the rivalry, both companies remain pragmatic about each other's success. Swiggy's upcoming IPO, recently approved by SEBI, is seen as a positive development for the entire food tech sector. \n\nThe competition between Zomato and Swiggy extends beyond food delivery, with both companies now heavily invested in the quick commerce space, which has exploded to $5.5 billion in just four years. This fierce competition will likely continue, shaping India's rapidly evolving tech landscape."
    },
    {
        "title": "Reliance Targets Quick Commerce Giants: Blinkit, Swiggy Instamart, and BigBasket in Ambani's Crosshairs",
        "description": "Reliance has already launched pilot programs via JioMart in Navi Mumbai and Bengaluru, signaling its intent to shake up the fast-paced quick commerce market.",
        "url": "https://www.businesstoday.in/latest/corporate/story/blinkit-swiggy-instamart-and-bigbasket-next-on-mukesh-ambanis-disruption-list-449137-2024-10-08?utm_source=rssfeed",
        "published_at": "2024-10-08T02:23:25+00:00",
        "category": "business",
        "news": "Reliance Industries, led by Mukesh Ambani, is reportedly launching a nationwide quick commerce service through JioMart, aiming to disrupt the rapidly growing market currently dominated by players like Blinkit, Swiggy Instamart, and BigBasket.\n\nPilots in Navi Mumbai and Bengaluru have already commenced, with plans to expand to 1,150 cities and 5,000 pin codes by month's end.  Reliance will leverage its existing vast retail network, including Reliance Digital and Trends stores, to fulfill orders, distinguishing itself from competitors reliant on dark stores. \n\nThe company aims for deliveries within 10-15 minutes, utilizing its logistics arm, Grab, and plans to undercut rivals by waiving delivery, platform, and surge fees. \n\nThis move comes as quick commerce platforms are already outperforming traditional FMCG giants like Hindustan Unilever (HUL) and Marico, according to a recent CLSA report.  The report highlights the potential of quick commerce to reshape consumer habits, with Zomato (Blinkit's parent company) being rated \"outperform\" while HUL and Marico are rated \"underperform\".\n\nReliance's entry into this sector is expected to intensify competition, particularly within the fast-moving consumer goods (FMCG) segment, where quick commerce is experiencing rapid growth."
    },
    {
        "title": "Middle East Conflict Jitters Markets Amid China's Reopening",
        "description": "The benchmark 10-year U.S. Treasury yield held above 4% in early Asia trade, as a robust U.S. labour market prompted traders to heavily scale back their expectations for Federal Reserve rate cuts.",
        "url": "https://economictimes.indiatimes.com/markets/stocks/news/middle-east-conflict-keeps-markets-nervous-ahead-of-chinas-reopening/articleshow/114028343.cms",
        "published_at": "2024-10-08T01:02:08+00:00",
        "category": "business",
        "news": "Global markets are experiencing a mixed bag of emotions, with the reopening of China's economy failing to lift Asian stocks despite initial optimism. This is partly due to fears over the escalating conflict in the Middle East, which is raising concerns about oil supplies. \n\nChinese stocks surged to multi-year highs following the end of an extended break, fueled by Beijing's aggressive stimulus measures. However, this optimism did not extend to other Asian markets, with Hong Kong's Hang Seng Index falling 3.9%. The broader MSCI Asia-Pacific index excluding Japan also saw losses of over 1%. \n\nConcerns over the potential disruption of oil supplies due to the Middle East conflict have sent Brent crude futures above $80 a barrel for the first time in over a month. While the price has retraced slightly in Asian trading, analysts believe the situation is likely to remain volatile. \n\nMeanwhile, investors are reassessing their expectations for the Federal Reserve's rate cut trajectory following a strong US jobs report. The benchmark 10-year US Treasury yield held above 4% in early Asian trade, reflecting the revised outlook. \n\nWhile the conflict in the Middle East and uncertainty surrounding China's economic stimulus are adding to market volatility, it is the US jobs report that is driving a reassessment of the Fed's stance. This is keeping investors on edge as they navigate a complex global landscape."
    },
    {
        "title": "Finding the Right Multivitamin: A Guide to Supplementing Your Diet",
        "description": "How to pick the right multivitamin for your body’s needs&nbsp;&nbsp;The Washington PostThe ultimate vitamin cheat sheet: Top foods packed with vitamins A to K for better health&nbsp;&nbsp;The Indian ExpressDo multivitamins work? What supplements actually do&nbsp;&nbsp;The TimesDoes everyone need to take vitamins — and which are most important? Here’s what to know&nbsp;&nbsp;AOL",
        "url": "https://news.google.com/rss/articles/CBMioAFBVV95cUxPQTN0Wi1SNVprTi1EZUQzV2Q0MW5ING9NQjBNcnN2a2tmY1VtNW51ODI5eUY4VmdoZ0NySDBhSkxqUW5GTE5rbk5zMVNCUTRqNEVFb3hFZmJTS1FtVnVVTTU4ZXlHVU83V0NTaFVWWnVZbGhvaGpvTjQ4cktFTTZNNmFzQm5UU2NrdDJwdTM0d2tjUHM3RndVdUZRMlRVMGJW?oc=5",
        "published_at": "2024-10-08T00:33:42+00:00",
        "category": "health",
        "news": "Whether you're looking to boost your energy levels, support immunity, or simply fill in nutritional gaps, multivitamins have become increasingly popular. But with so many options available, how do you choose the right one for your individual needs? \n\nExperts suggest prioritizing dietary sources of vitamins and minerals whenever possible. However, if you're considering a multivitamin, here's what to keep in mind:\n\n**Identify Your Needs:** \n\n* **Specific Deficiencies:** Talk to your doctor about any known deficiencies. They can recommend a multivitamin tailored to your requirements. \n* **Lifestyle:** Certain lifestyles, like veganism or restrictive diets, may benefit from targeted supplementation. \n* **Pregnancy:** Expectant mothers have specific needs, often requiring prenatal vitamins. \n\n**Choose the Right Multivitamin:**\n\n* **Look for High-Quality Ingredients:** Opt for reputable brands with verifiable certifications.\n* **Consider Bioavailability:** Certain forms of vitamins are easier for the body to absorb.\n* **Check the Dosage:**  Ensure the dosage aligns with your individual requirements.\n* **Consult Your Doctor:** Always discuss multivitamin use with your healthcare provider. \n\n**Remember:** Multivitamins are not a magic bullet. A balanced diet and healthy lifestyle remain crucial for overall well-being."
    },
    {
        "title": "New Study Calms Fears of 'Doomsday' Asteroid Swarm",
        "description": "New study eases concerns over possible 'doomsday' asteroid swarm&nbsp;&nbsp;Phys.org",
        "url": "https://news.google.com/rss/articles/CBMickFVX3lxTE5IZnAxVnNkRDNFY25UMHJuQmt0OTJaOVZfS1VyakdSMEFOb1BRUGhfdGRTdUVkeHJDQ3M2VXNkZmtiVUVxLVRXZlJKTVczS0JnSHFYUTNqTDR3T09mWjRPRUh0NllKS2RmX21zaS05WE1KQdIBcEFVX3lxTE9BR2dMY0laSXlRSk93ZUtIYkQ3RjNheVZFei1SNDBMaExTWXNwSGI2elA3eWlWTE15cjVBbldYdGZHMXY3TE82RXJwdzJ6R2l2aVJOZ0FJTHlyeUJUYVFTNlMybWdDZVM1WnI2NXVmNmE?oc=5",
        "published_at": "2024-10-07T19:57:29+00:00",
        "category": "science",
        "news": "A recent study has eased concerns about a potential \"doomsday\" asteroid swarm threatening Earth. While details of the study are currently unavailable, its findings suggest that the risk of a catastrophic asteroid impact is lower than previously thought. \n\nThis news comes as a relief to those who have been worried about the possibility of a large asteroid striking Earth, leading to widespread destruction. The study, although not yet publicly released, provides valuable insight into the potential dangers posed by asteroids and reinforces the ongoing efforts of scientists and space agencies to monitor and mitigate these risks."
    },
    {
        "title": "Mahindra's Second Electric SUV, the BE.05, Spotted in Production Ready Form",
        "description": "Mahindra की दूसरी इलेक्ट्रिक एसयूवी BE.05 का प्रोडक्‍शन वर्जन आया नजर, एड शूट के दौरान हुआ स्‍पॉट&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)महिंद्रा की दमदार इलेक्ट्रिक एसयूवी भारत में जल्द होगी लॉन्च; प्रोडक्शन रेडी अवतार में आई नज़र&nbsp;&nbsp;CarWale HindiMahindra BE.05...",
        "url": "https://news.google.com/rss/articles/CBMi1wFBVV95cUxQM1U2YW1NZURVSUhtSUpiZTI2WHZ1M3o0UWQ2ZDVMWUVlSFBDZ1dsYXRGTFNIR0RzdWNMeDJZNnlxeFhTOU5rTEJMenQwZFhCbWk3Wkl3dFNGcVNURWQxc1Ywd2kwZkpZTEJwSng0ZjNtRHBtNkVoLWpQUTFldmJrcVIzcTR1aUZjVk1seG9oNXhEaVJ4ZkJDcDNUOVduV2FyYUdJNkJFRVBTbGxFR3M5VjhTRGltZmNDOTBJSWpyRHdhX3Y0R3FSeDdGTFF4b3B1S3BLZ2tQZw?oc=5",
        "published_at": "2024-10-07T17:25:12+00:00",
        "category": "business",
        "news": "Mahindra's highly anticipated second electric SUV, the BE.05, has been spotted in its production-ready form. The vehicle was seen during an advertisement shoot, indicating that its launch is imminent. The BE.05, part of Mahindra's ambitious electric vehicle lineup, is expected to be unveiled in India soon.  While details about the SUV's features and specifications remain under wraps, its appearance in production form suggests that a formal launch is not far off."
    },
    {
        "title": "Meerut Investor's Matrimonial Ad Sparks Amusement with 54% Annual Income Growth Claim",
        "description": "The ad, shared on X (formerly Twitter), claims that the young investor has an annual income of Rs 29 lakh, which is \"compoundingly increasing\" by 54% each year. It even invites potential matches to a PowerPoint presentation on safe investing.",
        "url": "https://www.businesstoday.in/latest/trends/story/compounding-at-54-hell-be-the-richest-man-in-the-world-soon-netizens-react-after-matrimonial-ad-from-meerut-investor-promises-54-yearly-income-increase-on-rs-29-lpa-income-449122-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T15:40:15+00:00",
        "category": "business",
        "news": "A matrimonial ad posted by an investor from Meerut has gone viral, generating amusement and disbelief. The ad claims the investor earns Rs 29 lakh annually, with his income \"compoundingly increasing\" by 54% each year. \n\nSocial media users are skeptical about the claimed growth rate, which would see the investor quickly surpass even legendary investors like Warren Buffett. Many joked about the investor becoming the world's richest man if the growth continues. \n\nThe ad also offers potential matches a 16-slide PowerPoint presentation on the investor's \"safe\" investment strategy. Some users expressed concern about the legitimacy of the claims, speculating the investor may be involved in risky strategies. \n\nThe unusual approach of the ad, which focuses heavily on the investor's financial success, has led to comparisons with a business pitch rather than a traditional matrimonial profile."
    },
    {
        "title": "Taylor Swift Becomes Richest Female Musician in the World",
        "description": "Currently on her global Eras Tour, Swift's estimated net worth has reached an impressive $1.6 billion, placing her just behind Jay-Z on the Forbes list",
        "url": "https://www.businesstoday.in/latest/trends/story/with-a-net-worth-of-16-bn-taylor-swift-crowned-richest-female-musician-in-world-surpassing-rihanna-449115-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T14:28:12+00:00",
        "category": "business",
        "news": "Pop star Taylor Swift has overtaken Rihanna to become the world's wealthiest female musician, with an estimated net worth of $1.6 billion. This puts her just behind Jay-Z on the Forbes list, marking her as the first musician to reach billionaire status primarily through their music and performances.\n\nSwift's wealth has been driven by the phenomenal success of her \"Eras Tour,\" projected to be the highest-grossing concert series in American history, and the value of her music catalog. Forbes estimates her fortune includes almost $600 million from royalties and touring, another $600 million from her music catalog, and $125 million from real estate holdings.\n\nThe \"Eras Tour\" will conclude this year with Swift wrapping up the final shows in the US and Canada.  Her financial success reflects her immense influence on the music industry and her continued global popularity."
    },
    {
        "title": "Bigg Boss 18 Contestant Rajat Dalal Addresses CarryMinati Roast Video",
        "description": "Bigg Boss 18 Contestant Rajat Dalal Reacts to CarryMinati's Roast Video: 'Uske Jati, Dharam Ke Bare Me…'&nbsp;&nbsp;News18Who Is Bigg Boss 18 Contestant Rajat Dalal? Check Out His 7 Major Controversies&nbsp;&nbsp;Zee NewsBigg Boss 18: Rajat Dalal Lashes Out At Tajinder Bagga Over Rash Driving Incident, Says 'Apne Hisaab Se Baa&nbsp;&nbsp;News18Rajat Dalal joins Bigg Boss 18: Know all about the controversial influencer who feuded with Carryminati, Ajaz Khan&nbsp;&nbsp;Hindustan TimesBigg Boss 18: Rajat Dalal tells Salman Khan about Carryminati, godman controversy&nbsp;&nbsp;India Today",
        "url": "https://news.google.com/rss/articles/CBMi1wFBVV95cUxNUGY1a21hM2owLWVPNUJrbGxhSmo0dVZTM2c3T2tfaTBUbjF4ZzFETHlBZVpBdUo5WWlNMjJ5SFlmMVozb0tZY0lnRlNtRUdaRXZ2UVZxQ1l1c01xd3VLZDUxem1fa2pwbXZDTDEyRVhrZzdIVHNXaGktSURSVHN4eUdwWlFEWWNnN2tsXzdYbWMyUzRNQUlHWm16ZHdLTVNENlljMXN0TmU3ZFFuWE81djJKYlIzbUdlblpZWjFob3o0NHBhSi0zWnBvUzcwZnZDbnhvMWNuONIB3AFBVV95cUxQWUp4MEg2VkRzeE1ZS2F4U1U1TnZ1WFRFb2RfVlVSUmhLV3RwSVl5Z3N3VUF4Y3FxcVNYWkJkcU5hT1BOaHp5OUUtSkRsbVlwcWlLTkRzUUpsWWhZdWRiZ2pjZkpMUkxwcXFKUlVqUEhzRVlKaHBuUWlDSnhyaVBCSG52bEpOQUEyNGhyems3Njl1Z284WU14RW9kMTRjcVVSWm1hVzdHWEh6a2FJNUozbk01RWNoM0xlOVU0RU1Rc1djRG1SM2dmSnNYS1BTamFPNU5Fb1lhR3JIaE5y?oc=5",
        "published_at": "2024-10-07T14:26:33+00:00",
        "category": "entertainment",
        "news": "Rajat Dalal, a controversial influencer and contestant on the reality show Bigg Boss 18, has reacted to a roast video by popular YouTuber CarryMinati. Dalal, known for his past controversies, has hinted at CarryMinati making personal attacks regarding his caste and religion. \n\nThe exact nature of the roast video and the specific comments made by CarryMinati are yet to be revealed.  Dalal's statement has sparked curiosity and anticipation for potential drama within the Bigg Boss house.\n\nThis is just one of many controversies surrounding Dalal, who has previously been involved in feuds with other influencers, including Ajaz Khan. His participation in Bigg Boss 18 is sure to bring further attention and heated discussions."
    },
    {
        "title": "Mumbai's Kindness Wins Over Visitors: A Viral Thread Highlights City's Warmth",
        "description": "The conversation began when the user, @yappy_hour, praised Mumbaikars as the \"nicest strangers\" she had ever met, jokingly calling them the opposite of the usual \"don’t talk to strangers\" advice.",
        "url": "https://www.businesstoday.in/latest/trends/story/mumbai-really-knows-how-to-take-care-of-people-viral-thread-makes-netizens-share-how-mumbaikars-kindness-wins-over-visitors-449114-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T14:15:03+00:00",
        "category": "business",
        "news": "A recent viral thread on X (formerly Twitter) has showcased the kindness of Mumbaikars, prompting a chorus of online users to share their own heartwarming experiences in the city.  The conversation began when user @yappy_hour described Mumbaikars as the \"nicest strangers\" she had ever met, recounting several instances of help and generosity during her visit.\n\nFrom a fellow passenger who became an impromptu tour guide, to a local vendor who helped with luggage, and even a stranger who negotiated a fair price for a taxi, the thread details a series of acts of kindness that left the user touched.  \n\nThis heartwarming thread has resonated with many, highlighting Mumbai's reputation for its vibrant culture, diverse people, and infectious energy. Users have expressed their gratitude for the warmth and friendliness they've encountered from Mumbaikars, emphasizing the city's unique and welcoming atmosphere."
    },
    {
        "title": "\"Graduate Driver Paid Rs 20 Lakhs in Taxes!\"  -  Passenger Amazed by Online Cab Driver's Income",
        "description": "The woman, who booked a cab through Indrive, conversed with the driver, who disclosed that he and five of his friends, all graduates from corporate and civil engineering backgrounds, turned to driving cabs after struggling to find suitable employment",
        "url": "https://www.businesstoday.in/latest/trends/story/graduate-driver-paid-itr-of-rs-20-lakhs-passenger-surprised-over-online-booked-cab-drivers-income-449107-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T13:44:26+00:00",
        "category": "business",
        "news": "A young woman in Thane, India was surprised to learn that her Indrive cab driver had filed an income tax return of Rs 20 lakhs the previous year.  The driver, a graduate in civil engineering, revealed that he and five friends turned to driving cabs after struggling to find suitable employment. \n\nThis revelation sparked online discussion, highlighting the stark contrast between the driver's success and the struggles faced by many in the traditional taxi industry. The driver's income is particularly impressive considering the rise of app-based services like Ola and Uber, which have negatively impacted earnings for many traditional cab drivers.\n\nWhile the driver's success story is inspiring, some have questioned the viability of his business model, given the high expenses associated with owning and maintaining a fleet of five cars.  Despite this, the story serves as a reminder that opportunities for success can be found in unexpected places, even within a seemingly competitive and saturated market."
    },
    {
        "title": "\"Delhi Belongs to Punjabis, Period?\" - Mumbai Woman's Claim Sparks Debate",
        "description": "Sanskriti Naruka, a Mumbai resident, shared her thoughts on visiting Delhi in an open letter posted on X. She addressed \"everyone coming to Delhi\" and claimed that anyone who doesn’t speak Punjabi or try to will be seen as an outsider. In her post, she wrote, \"Delhi belongs to Punjabis, period.\"",
        "url": "https://www.businesstoday.in/latest/trends/story/been-in-delhi-from-last-13-years-never-faced-discrimination-netizens-react-after-mumbai-woman-claims-you-will-be-treated-as-outsiders-in-delhi-if-you-dont-know-punjabi-449101-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T13:10:24+00:00",
        "category": "business",
        "news": "A recent post on social media by a Mumbai woman, Sanskriti Naruka, has ignited a debate about Delhi's inclusivity. Naruka claimed in an open letter on X that anyone who doesn't speak Punjabi or make an effort to do so will be treated as an outsider in the city. She went as far as to declare, \"Delhi belongs to Punjabis, period.\" \n\nHer statement sparked a wave of reactions, with some users agreeing with her sentiments, sharing their own experiences of feeling excluded in Delhi. However, many others vehemently disagreed, pointing to Delhi's cosmopolitan nature and its diverse population. \n\nSeveral users shared personal anecdotes of living in Delhi for years without facing discrimination based on language. They asserted that while communication barriers might exist, Delhi is not a city where people are ostracized for not speaking Punjabi.\n\nSome even pointed out similar linguistic dynamics in other cities, including Mumbai, where Marathi is often seen as a prerequisite for local acceptance. \n\nThe debate highlights the complex issue of identity and belonging in a diverse city like Delhi, prompting a discussion about inclusivity and the role of language in defining social acceptance."
    },
    {
        "title": "Shilpa Shirodkar Keeps Family Matters Private on Bigg Boss 18",
        "description": "Bigg Boss 18's Shilpa Shirodkar Refuses to Talk About Namrata Shirodkar, Mahesh Babu: 'I Have No...'&nbsp;&nbsp;News18Exclusive - Bigg Boss 18's Shilpa Shirodkar on sister Namrata and brother-in-law Mahesh Babu's reaction t&nbsp;&nbsp;The Times of IndiaBigg Boss 18: 90s Bollywood actress Shilpa Shirodkar joins Salman Khan's show&nbsp;&nbsp;ANI NewsBigg Boss 18 contestant Shilpa Shirodkar reveals she had no work before Salman Khan’s show: ‘I was seeking work, but people were not ready to meet me’&nbsp;&nbsp;The Indian ExpressBigg Boss 18: Shilpa Shirodkar On Being Part Of The Show: \"...",
        "url": "https://news.google.com/rss/articles/CBMi0AFBVV95cUxQUkJoUE92QmZBeng2am1JcVpsQTk3Ny1ZejVUYWhxaXBkUWdzTHlkZ3owOGNfUUxKamxSZWt3eTBOUS1tbE9zYXA3OU84dVg0R2JQR2oxMnJWdERGUDFLZVJsVjJlQkRVVjJGX0RFUGRsUFhIRFAzWVc0bUtTMnRLRDdJdDgtZFNVRXJXZ3lld1laME9sOUJvMnEtbXJKbm10TXRReGRuN2VrbjJNek8wNENNVWpBNGlvZ0FhWkE3c09EZGlrcFZRWE5UUjVYWkl60gHWAUFVX3lxTE9jOXVPNjhVUGJvZF9zRVJwWnFfRllzbWFNb1VTdDFZWEozVXI0bTVvTEFZbjJ2UU1EcWJCazNmSFpsZGdycUtocWlTU0VPUFh1VkxFSnJTcnhSckd2ak5GLTdFRjB5cGFCVXNyQTdnX2xpcnpkZzVaZi1RcHcyLV9ZS0VsTUczSTdDSk5hQ3FRa3J5emEwQXhoY3FlWnZPenFPVi0xZzdjWWdnTXg3VUlRUmZuVnNhQ1prNVJGQTVXYkVUMXpYS1FtVktUakltSi1CY0VkNWc?oc=5",
        "published_at": "2024-10-07T12:58:09+00:00",
        "category": "entertainment",
        "news": "Shilpa Shirodkar, the 90s Bollywood actress, has joined the cast of Bigg Boss 18. While discussing her entry into the show, Shilpa declined to comment on her sister Namrata Shirodkar and brother-in-law Mahesh Babu's reaction to her participation. \n\n\"I have no comment on that,\" Shilpa stated when asked about her family's opinion on her being on Bigg Boss.  She did mention that she was seeking work before joining the show, as people were hesitant to meet with her.  \n\nThis is not the first time Shilpa has made headlines for her personal life. Previously, she was open about her struggles in the film industry. With her entry on Bigg Boss, fans can expect more insights into her life and career."
    },
    {
        "title": "India Confident of Crude Oil Supplies Despite Tensions: Puri",
        "description": "Despite a 13 per cent spurt in Brent crude prices in last seven days, petrol and diesel prices in India are unlikely to rise as analysts see both Israel and Iran pulling back from the brink.",
        "url": "https://www.businesstoday.in/latest/economy/story/india-does-not-see-any-shortage-of-crude-oil-supplies-hardeep-singh-puri-449094-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T12:38:02+00:00",
        "category": "business",
        "news": "Despite a recent 13% surge in Brent crude prices, India's petrol and diesel prices are unlikely to rise, according to analysts.  This comes as both Israel and Iran are seen to be pulling back from the brink of conflict.\n\nIndia, which imports 88% of its crude oil needs from 39 countries, remains vulnerable to market fluctuations. However, the government is confident that India can weather any supply disruptions.\n\nPetroleum Minister Hardeep Singh Puri stated that the world currently has more oil available than demand. He believes there are enough alternative suppliers to mitigate potential shortages in the short to medium term.\n\nWhile some experts warn that a potential Israeli attack on Iranian oil installations could trigger a major disruption in supply, others believe tensions will ease, and prices will soften. \n\nThis sentiment is reflected in the futures market, where Brent crude prices are forecasted to decline in the coming months.  Furthermore, a report by ANZ suggests that OPEC could offset any potential supply shortages from the Middle East.\n\nIndia's crude oil basket has been trending downwards since April, averaging $78.27 per barrel in August.  This, coupled with the recent market stability, indicates that India may be able to maintain current petrol and diesel prices for the foreseeable future."
    },
    {
        "title": "Retail Inflation Expected to Rise Again in September",
        "description": "Vegetables remain pricey, core inflation seen to be on the rise",
        "url": "https://www.businesstoday.in/latest/economy/story/retail-inflation-may-rise-again-in-september-449067-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T10:46:56+00:00",
        "category": "business",
        "news": "India's retail inflation, which had dipped below 4% for the second consecutive month in August, is projected to climb back to 5% in September. This upward trend is attributed to several factors, including rising vegetable prices, increased core inflation, and a surge in demand. \n\n**Vegetable prices**, especially for key items like onions, potatoes, and tomatoes, have been significantly higher than last year. The report by CRISIL, which tracks the cost of a home-cooked meal, revealed an 11% year-on-year increase in the price of a vegetarian thali due to rising vegetable costs. \n\n**Core inflation**, which excludes volatile food and energy prices, is also expected to rise due to a combination of factors.  Increased rural demand, fueled by improved crop sowing, along with ongoing festive demand and elevated gold prices, could push core inflation upward. \n\n**Analysts at Bank of Baroda** project CPI to reach 5.1% in September, highlighting a risk of further increases.  **DBS Bank's Radhika Rao** attributes the anticipated rise to base effects and volatile weather conditions affecting perishable food prices. \n\nWhile **the Reserve Bank of India (RBI)** has expressed concerns about inflation and its potential impact on core inflation, the central bank is expected to maintain the repo rate at 6.5% for the tenth consecutive meeting. \n\n**The MPC's statement** is scheduled for October 9th, but the latest indicators suggest a de-escalation in worries about inflation, even as risks remain."
    },
    {
        "title": "Dengue and Malaria Cases Surge in Delhi: Health Department Issues Warning",
        "description": "Dengue and Malaria : सावधान! मलेरिया और डेंगू के मामले में रिकॉर्ड तोड़ इजाफा, स्वास्थ्य विभाग ने दी चेतावनी&nbsp;&nbsp;प्रभात खबर - Prabhat KhabarDengue & Malaria: रिकॉर्ड तोड़ रहे हैं मलेरिया के मामले, डेंगू ने भी बढ़ाई चिंता; दिल्ली वाले हो जाएं सावधान&nbsp;&nbsp...",
        "url": "https://news.google.com/rss/articles/CBMirwFBVV95cUxNd0dLX1RzVUVxcHhUTHZBVllEQ09lcmZtU0g5S1NLREs2bGxXTEFFSDdyNTEyMHlaWmVNMml1aFF3NDlMajFxZFlCVUdsTURvMm9HNG1uMTJHSHlvSUVKNkQ5TGtHN3dkejlRMFN4LUpRc1N1TFI0TjhrekgxLWFITWNwekxLNjU0b0hwUjJhV293bGFldlgzOWpla1VkNGlmQ2dSbmx3QXJFQ1JaZ0dr0gG0AUFVX3lxTFAtcUM2Y2F3cEltb1VldGJISW9XQ3ExS05aYk9HYlZNNzdtVG1xNWFrc0daM1NVbzFCUUdGWWYxQ0hWUDJzU0xlSlJrTmFPZVRjN3N5X2tzOEVTSzRmZFRvc0xzWk5uYnBtRTZDLW1FYlNMS2QtenUtR2o3NFFKRXJPWG85UHdFRnN1dlFqREF6RWx6RlozMnpiS2hUV1NQT3dYOUJFcFowbG9mb2hzLTh3MldpZw?oc=5",
        "published_at": "2024-10-07T10:15:13+00:00",
        "category": "health",
        "news": "Delhi is facing a record surge in dengue and malaria cases, prompting the city's health department to issue a warning to residents.  \n\nThe number of malaria cases has reached unprecedented levels, while dengue infections are also on the rise. \n\nThe health department urges citizens to take precautions to prevent mosquito breeding and protect themselves from mosquito bites. This includes using mosquito repellents, wearing long clothing, and ensuring proper drainage around homes."
    },
    {
        "title": "Bengaluru Embraces Virtual Receptionists",
        "description": "Ananya Narang, the CEO of the content-as-a-service platform Entourage, recently experienced this innovative concept during her stay at a local hotel",
        "url": "https://www.businesstoday.in/latest/trends/story/peak-bengaluru-moment-virtual-hotel-receptionists-make-their-debut-in-bengaluru-449048-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T09:41:38+00:00",
        "category": "business",
        "news": "Bengaluru, India's tech hub, is experiencing a new wave in the hospitality industry: virtual receptionists. Ananya Narang, CEO of Entourage, recently encountered this concept during her stay at a local hotel. \n\nInstead of traditional front desk staff, guests interacted with trained hospitality professionals remotely via video conferencing. This innovative system, allowing hotels to operate without on-site staff, has garnered mixed reactions. \n\nSome applaud the efficiency and \"future of hospitality,\" while others worry about the lack of human interaction and potential impact on customer experience. The trend, however, signifies the growing influence of technology on even traditional industries like hospitality, pushing Bengaluru further into the digital age."
    },
    {
        "title": "Maruti's SUV Assault: Five New Models Planned for Launch in 2025",
        "description": "Upcoming Maruti SUVs: एक-दो नहीं मारुति कर रही पांच एसयूवी लॉन्‍च करने की तैयारी, जनवरी 2025 से होगी शुरुआत&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)2025 की शुरुआत में 5 नई SUV लॉन्च करेगी Maruti, लिस्ट में पहली Electrci Car भी शामिल&nbsp;&nbsp;DriveSpark HindiElectric Cars...",
        "url": "https://news.google.com/rss/articles/CBMi1wFBVV95cUxPSkN1RU8xOTdBcGxJbXhwdGg0Z21DZGdtTUF2emplM0tBOWFkMjVOY3Q5VUNSMHZZNGRDTU5hY01Wd1VNU0ljRjlvU2pGRXJfLWVwWVliN0ZWdHdTMjdHOTU1ektheWU2dUhaNm9HdkRkTkZLQkdRV3o3YldocERiLVRrUGdoU0lRWXRzRGpBTEszeThiVThpR1NfV0hDMUQ5NXRZbU5OblJUYVNKQTM0NEtXTURJdFRPcW9IZ1lWUXBoV1o0NjVLcnNNQnFOVGNEZFpWUklUNA?oc=5",
        "published_at": "2024-10-07T09:25:49+00:00",
        "category": "business",
        "news": "Maruti Suzuki, India's leading car manufacturer, is gearing up to launch a wave of five new SUVs starting from January 2025. This ambitious plan includes their first-ever electric vehicle, marking a significant move into the rapidly growing EV segment.  While specific details about the models are yet to be revealed, the company is expected to cater to diverse segments with these new offerings. This aggressive strategy signals Maruti's commitment to strengthening its position in the popular SUV market."
    },
    {
        "title": "Nestle India Announces Leadership Transition: Suresh Narayanan Retires, Amazon's Manish Tiwary Takes Over",
        "description": "Narayanan has been with Nestle for over 26 years, playing a pivotal role in the company’s growth and navigating significant challenges. He took charge as managing director in 2015, a period marked by the Maggi noodles crisis.",
        "url": "https://www.businesstoday.in/latest/corporate/story/suresh-narayanan-to-retire-from-nestle-india-in-2025-amazons-manish-tiwary-to-take-over-as-md-449032-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T09:02:13+00:00",
        "category": "business",
        "news": "Nestle India's long-serving Chairman and Managing Director, Suresh Narayanan, will retire on July 31, 2025. He will be succeeded by Manish Tiwary, currently the country leader at Amazon India, who will assume the role of Managing Director from August 1, 2025.\n\nNarayanan has been with Nestle for over 26 years, guiding the company through significant challenges, including the Maggi noodles crisis in 2015. He successfully revived the brand after a nationwide ban, demonstrating his leadership and navigating a turbulent period. \n\nTiwary, with nearly three decades of experience in e-commerce and consumer goods, joins Nestle following a 20-year career at Unilever and a successful tenure at Amazon India since 2016. He holds an MBA from IIM Bangalore and will step down from his current directorships at Amazon and More Consumer Brands by October 30, 2024, before joining Nestle. \n\nThis leadership transition marks a new chapter for Nestle India, building on Narayanan's legacy of growth and stability while navigating the evolving consumer landscape."
    },
    {
        "title": "Webb Telescope Finds Carbon Dioxide on Pluto's Moon Charon",
        "description": "Webb telescope discovers carbon dioxide on Pluto's moon at edge of Solar System&nbsp;&nbsp;India TodayJames Webb Space Telescope detects carbon dioxide and hydrogen peroxide on Pluto’s largest moon Charon; k&nbsp;&nbsp;The Times of IndiaJames Webb Space Telescope deciphers the origins of Pluto's icy moon Charon&nbsp;&nbsp;Space.comDetection of carbon dioxide and hydrogen peroxide on the stratified surface of Charon with JWST&nbsp;&nbsp;Nature.comNASA's Webb Telescope Detects Carbon Dioxide On Surface Of Pluto's Largest Moon Charon&nbsp;&nbsp;NDTV",
        "url": "https://news.google.com/rss/articles/CBMi0wFBVV95cUxNd2F2dlNhdDJ0TmJrUTlwaEtxekd6T01KLUJsbVBKTlRLc1U4R2FSYmdXZlVyT1E4OG51YlB3VXhQZGJvUk0xZkpiZEx5WlBQaU9hVHJzYnJwdXd2U19rZ1kxLThRbW5taDdPVWxuaW5oWGdNNC1EMlZlYUE5eXFVbm4zVFBSODk1cEVuMmdlckhVVGUxN0RNLWFNcXp4b29BM2tPNG5nZnJlWUlxS0hoelRxX21FZFp4QjE0N1hmUTV0djE0ZDZRRU5HSWJQbTJhTVpZ0gHYAUFVX3lxTE5FSmFVQ29IckR1a1UxTERfU1RXSGlOLVR5MW9tQngtRTd6aHI0VmFoalBVMnlNNGV3T2EwOFBhRTJteXBXSlNFS0NhZkdOcUNuUWVLZDVvNy1HekRqN3JHelNqcXY3RnAtWENvdjUzZkR3aFBKM0Nna1pWRU91Rk5iWnY3b2tpOXZMN25zM3NOdFJSVl84R0Flb283N3NicGhNeGpvWFBfbVZnd3JKekw1M1dxdURqeUtQRUZyNENSRXo3eFB1YXpMSTF5a0RIM0JCWDExM0pLeg?oc=5",
        "published_at": "2024-10-07T08:20:38+00:00",
        "category": "science",
        "news": "The James Webb Space Telescope (JWST) has made a significant discovery – evidence of carbon dioxide on Pluto's largest moon, Charon. This finding, published in the journal Nature, sheds light on the composition and evolution of this distant icy world.\n\nThe observations, conducted with JWST's Near-Infrared Camera (NIRCam), revealed the presence of carbon dioxide, as well as hydrogen peroxide, on Charon's surface. This discovery suggests that the moon's surface is more complex than previously thought, with evidence of volatile compounds that may be linked to its geological history.\n\nScientists are excited about this new information, as it could provide insights into how Charon formed and how it has evolved over time.  This discovery further underscores the remarkable capabilities of the James Webb Space Telescope in exploring the outer reaches of our solar system."
    },
    {
        "title": "Vitamin C Deficiency Linked to Unusual Bleeding and Fatigue in Elderly: Study",
        "description": "बुजुर्गों में विटामिन 'सी' की कमी से असामान्य रक्तस्राव और थकान हो सकती है : अध्ययन द्वारा IANS&nbsp;&nbsp;Investing.com भारतVitamin C के बेस्ट सोर्स संतरा खाने से मिलते हैं ये फायदे&nbsp;&nbsp;Punjab Kesariविटामिन-C की खान है ये घास&nbsp;&nbsp;News18...",
        "url": "https://news.google.com/rss/articles/CBMiaEFVX3lxTFBQSV9Tb0h2MU1ZTmtGU0k4aVhfWWxGM1lWTTRUdDEzcE5STzd6Q0lGTkthLWM4WXp3S2ZCNGl3TlVlaW9pU01EWUpDWlhwVUhnNjhXTlFzQXlhdVFsOVhod1pZNGJ3Q1FL?oc=5",
        "published_at": "2024-10-07T07:56:37+00:00",
        "category": "health",
        "news": "A recent study has highlighted the potential health risks of vitamin C deficiency in the elderly, suggesting it can lead to unusual bleeding and fatigue. \n\nWhile the specific study details are not available, this news snippet suggests that maintaining adequate vitamin C levels is crucial for older adults. \n\nVitamin C, an essential nutrient, plays a vital role in various bodily functions, including collagen production, wound healing, and immune system support.  \n\nThis finding emphasizes the importance of ensuring elderly individuals consume a balanced diet rich in vitamin C sources such as citrus fruits, berries, and leafy greens. Regular checkups and consultation with healthcare professionals can help identify and address any vitamin deficiencies early on."
    },
    {
        "title": "Q2 Earnings Season Kicks Off: TCS, IREDA, and DMart Lead the Way",
        "description": "Q2 results season begins this week with TCS, IREDA, DMart. Check out the earnings calendar&nbsp;&nbsp;The Economic TimesQ2 results: TCS, IREDA, Avenue Supermarts among companies to declare earnings next week; check full list here&nbsp;&nbsp;MintIT giants likely to post lukewarm growth in the second quarter&nbsp;&nbsp;Deccan HeraldSigns of recovery in IT space; HCL Technologies & TCS could give over 20% return in 1 year&nbsp;&nbsp;The Economic TimesIT stocks to buy: Ahead of Q2 results, JP Morgan bullish on 1 midcap and 3 largecaps; bearish on 1 largecap stock&nbsp;&nbsp;Zee Business",
        "url": "https://news.google.com/rss/articles/CBMi-AFBVV95cUxOcHBfcjhMMUVKeDZoZ01WTlVoN3FUemROaFBybGtmUWEyd1I4Rk1yNVB5LXlYVXMyWDJaZ2RYcW1uRkJTMXhQaEdkLURZSDlCNVVHVk9HY2hUWnFOcmVpelpBQVZPMjluRjhKR0RSVEtkY01MNDJwRjEza3cxZENxXzJjYVJzcVh4TFFMUjRBalZBckFoRzJiSk1YMWJKQ01RMzgwRFNscVNRa1FRUHhMT2VHSHgyR0NmZjcyWi1Ea2xxa2s0TnczNEhYMHNmbzliR09UQ0F4OU9IMm9QVi1HMThYUG5fX19rbkRJc0dBZmJrcVVfaXgzeA?oc=5",
        "published_at": "2024-10-07T07:46:03+00:00",
        "category": "business",
        "news": "The second quarter earnings season is officially underway, with major companies like Tata Consultancy Services (TCS), Indian Renewable Energy Development Agency (IREDA), and Avenue Supermarts (DMart) set to release their financial reports this week. \n\nAnalysts predict mixed performance from the IT sector, with some projecting lukewarm growth for giants like TCS. However,  a potential recovery in the IT space is also being discussed, with companies like HCL Technologies and TCS potentially offering over 20% returns in the coming year. \n\nJP Morgan has released a bullish outlook on specific IT stocks, favoring one mid-cap and three large-caps while expressing caution towards a particular large-cap stock.  \n\nFor a complete list of companies releasing their Q2 earnings reports, consult the dedicated earnings calendar."
    },
    {
        "title": "Double Down on iPhone Security: Setting a Passcode",
        "description": "iPhone की सिक्योरिटी करनी है डबल तो सेट करें पासकोड, स्टेप बाय स्टेप तरीका&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)",
        "url": "https://news.google.com/rss/articles/CBMitgFBVV95cUxPQWNhQjFZVUx0dkdqaTVsNllkMFZkVDdCeFlGbXQwQlFiTWVQSlZESGF1eGNDUXVFWklGYzRMQXJMMEpoRHduOGN0YjM2VXdjdV8yeWk4eEJSSzU5NkJDWElyNXVHaGZIRXJVdnVrR1BfMURVbmFIZS1lZXZ2dVZ3YWh6Qk1fYzhXdlRvU01BWnJvQVBOR003Z3NxblpTbzFUQmUyekU3YV9OdzBBZ2Y2bWZVX3lXZw?oc=5",
        "published_at": "2024-10-07T06:26:23+00:00",
        "category": "technology",
        "news": "This article, originally published in Dainik Jagran, provides a step-by-step guide to setting a passcode on your iPhone, enhancing its security. The article, however,  lacks the actual steps needed. To protect your iPhone, follow these simple steps:\n\n1. **Open Settings:** Locate the Settings app on your iPhone and tap it.\n2. **Choose Face ID & Passcode:** Scroll down and select the \"Face ID & Passcode\" option.\n3. **Enter Current Passcode:** If you have a passcode already, enter it to continue.\n4. **Set a New Passcode:**  Follow the prompts to create a new passcode. This should be a strong combination of numbers, letters, and symbols.\n5. **Confirm Passcode:** Re-enter your new passcode to confirm.\n\nBy setting a strong passcode, you effectively create an extra layer of protection for your iPhone, safeguarding your personal information and preventing unauthorized access."
    },
    {
        "title": "Penny Stock Turns Multibagger, Delivering 100x Returns",
        "description": "₹6.50 to ₹680: Small-cap penny stock turns multibagger in four years, turns ₹1 lakh to ₹1 crore | Stock Market News&nbsp;&nbsp;MintRs 2926 crore order book: Transformers & rectifiers company bags new orders worth Rs 565 crore from Power Grid Corporation of India Ltd&nbsp;&nbsp;Dalal Street Investment JournalTransformer stock jumps 5% after receiving ₹565 Cr order from Power Grid&nbsp;&nbsp;Trade BrainsSmallcap stock hits UPPER CIRCUIT after Rs 565 cr order win from Power Grid&nbsp;&nbsp;ET NowTransformers and Rectifiers stock soars 5% after Rs 565 crore order win&nbsp;&nbsp;...",
        "url": "https://news.google.com/rss/articles/CBMigAJBVV95cUxOa1Voai1KOTJKV2hGYXdTOThXb2NXXzRzUF90S21VYVliQmVZRy11UkFmRnJFMnBEUHQxRmV1ZmloSzJKOGU4ZEVnVXFiTDJKNWtMSmpBbzhoU25pNU5fMDhsVmhBc0lQZzNsQnFucGpDZE5Wc09rU1h0YWh1SUNxYkdxVXJBQmY1RWQ5d1p1YUp5SS11X1J1Rm9uVGljcGUxZ3ZURGtwOGNyMTk0cndqRndYVHZTQUFacUc0WDRJd2RyU3JBOXNWNHQtUzFNR3RvZ3h6YXl2M1o0TXpVbXU5dURESmRnUWV5NUxOSE9LaWJwc0I5SDYybTdwTld4cmxN0gGGAkFVX3lxTE8xcmRRM3dncEJqbWVWZDNLQlM2R1lrZThnOVJscUN6LTdXVVcxQWw2S0dFeDBYd2dxU1NTdXItNlRHU196c1VZS2tkMF9fTzdTVkVlaHBKdGFMWlU5bF95ekRMT2lfZDBHNkR5Qm4tdXNrUDBuMkNUVDZJVnNVYzU5NFpRdF91Q0E5R1BfSFJmTFdhTHNrd2U1N2I1VVdIZWc4WlY3eVZ4bFoyN2E5eUtPeENnQzVweXJnamNVMWZBSkhSRTlWemFrS1BpNmZoVzdNVjdKcDQ0VUN2NHFFOTk2YXU0dFFIVkNMUERadTRxUkN1RGJ0VUdlVkFmeVNPMTdTcC1WSGc?oc=5",
        "published_at": "2024-10-07T04:07:42+00:00",
        "category": "business",
        "news": "A small-cap penny stock has delivered phenomenal returns, turning an initial investment of ₹1 lakh into ₹1 crore in just four years. The stock, which was trading at ₹6.50 in 2019, has surged to ₹680, marking a 100x increase. \n\nThis dramatic rise is attributed to a recent order win from Power Grid Corporation of India Ltd. The company, which manufactures transformers and rectifiers, secured a ₹565 crore order, sending its stock price soaring by 5% on the news. \n\nThe stock has continued to perform well, hitting the upper circuit limit on several trading days following the order announcement. \n\nThis remarkable success story highlights the potential for significant returns in the small-cap space, while also emphasizing the importance of carefully researching and investing in promising companies."
    },
    {
        "title": "Hyundai Offers Huge Discounts During Festive Season",
        "description": "Festive Season में Hyundai की कारों पर मिल रहा तगड़ा डिस्‍काउंट, 80 हजार रुपये तक के मिल रहे ऑफर्स&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)Renault Kiger&nbsp;&nbsp;हरिभूमि26kmpl की माइलेज, 6.12 लाख कीमत, Tata ने अपनी इस कार के ईवी वर्जन पर घटा दिए 1.2 लाख&nbsp;&nbsp;News24 HindiHyundai की इन 4...",
        "url": "https://news.google.com/rss/articles/CBMi_AFBVV95cUxQZGVfZHprNWxVWDhuV0lKVWdmZTZ5b2gtQVNKQWFkV25hM3cwWl8zOURYenB3dVRfTDNsMXRESjBzZFRfRVpxY3JxZENsQjNxd0stX2EzUlRoamk3MlcxTXZEdzlicUVCZFhhUTVqa0ZVcENObXNNdkVOVGpXSUVlRFZGNXQ0ZU1SeGNWSzFYZGNoUXBTODV6TFF3aEllbmF0TWJYTmpxbm4ya3pHNzBjQzUwMklfaDRTeS0yRTVDUEZ3ZldkZWdZTkZIX3pqSEdRNzg0RzJQYlRnQlptdlptNWFYYVQ5blFIZ01xS013Q1k0TkZtX0dsOVJZR2I?oc=5",
        "published_at": "2024-10-07T03:26:32+00:00",
        "category": "business",
        "news": "Hyundai is offering significant discounts on its vehicles during the festive season. The discounts can reach up to ₹80,000. While specific models and offers were not mentioned in the provided information, this news comes amidst a trend of car manufacturers offering attractive deals to boost sales during the holiday season."
    },
    {
        "title": "\"Only Hiring Indians!\": Canadian Woman Accuses Tim Hortons of Discrimination",
        "description": "The controversy comes as Canada grapples with an immigration surge and new restrictions from the Trudeau government, further fueling discussions about diversity in the workplace.",
        "url": "https://www.businesstoday.in/latest/trends/story/only-hiring-indians-canadian-woman-makes-explosive-charge-against-tim-hortons-448965-2024-10-07?utm_source=rssfeed",
        "published_at": "2024-10-07T02:58:45+00:00",
        "category": "business",
        "news": "A Canadian woman has sparked controversy after claiming she was fired from Tim Hortons for speaking out against alleged discriminatory hiring practices. The woman alleges that Indian managers at her location were exclusively hiring fellow Indian immigrants, creating an unfair work environment. \n\nThis incident comes at a time when Canada faces an immigration surge and new restrictions, fueling discussions about workplace diversity. The woman’s viral post on social media has drawn mixed reactions, with some criticizing the alleged favoritism and others defending the right of qualified immigrants to secure jobs. \n\nTim Hortons has yet to respond to these accusations. This incident echoes a previous viral video showing dozens of foreign students, primarily Indian, queuing for jobs at Tim Hortons, further highlighting the ongoing debate about fairness and opportunity in Canada’s immigrant landscape."
    },
    {
        "title": "Oil Stocks Surge as Israel-Iran Tensions Rise",
        "description": "Israel-Iran war: Experts recommend these five oil stocks to buy on Monday | Stock Market News&nbsp;&nbsp;MintOil drops as traders watch for Israeli response to Iran strike&nbsp;&nbsp;CNBCTV18Goldman eyes Brent outlook rise due to Iranian supply risks&nbsp;&nbsp;The Economic TimesWhat's next for oil and gas prices as Middle East tensions heat up?&nbsp;&nbsp;The Times of IndiaMarkets Brace for Middle East Oil Supply Shock&nbsp;&nbsp;OilPrice.com",
        "url": "https://news.google.com/rss/articles/CBMi2AFBVV95cUxOdFQ1bmN4blFqc185eEZCNXFaNWlQV1RwenVscmFXVDItNXk4STVXUXBTRFpVY2lSMzd1WlJFTXFVYUpiRWlyblZfS3l0MnhOSVA4TWkxREV1aGUxekNJMnU2WmQ2eHhNMjJmLS1WUkxfN2ZPZ2pqeEJ2cHZBLUdGTDk3d3VWbFdQc1Rnd2ZwdUczMFRiT0pqSzJ2TjBiUkxSNm1CY1VDQWE0NXVaUjY5SFgycTdWX25Tamo4T3dOTDJwdlR4V2JYLW51S3F3NUJPUnJFTU5wb3bSAd4BQVVfeXFMUGNOOGJRcUJDLV9XOUt1NU1LNFVGc0ZJbXQ3RnhmdTBMSXYyUmlVdlZxamlBOEtRY0E3Z1prb3BEdmdsQURobHpZSTlrcU5CX2gzdVUtNU4tcDBoVGNJUm4zSnVaTjBmMnc0OE96ZEJtXzg3ZExYdkdNTHNiVnFCVTlkMkJVa0ZLZ3JNUjFQWkJxZUpIckRmaTk3M0E4Z1hpeTRDOGZJcFMxbDlYVkpqcVpjcEFPQUd3QTNYeVZmcVVDdnEyUnlTLXlpamVOSlNMcUp6QzlmNmFFOVdraGdn?oc=5",
        "published_at": "2024-10-07T02:27:17+00:00",
        "category": "business",
        "news": "Amidst escalating tensions between Israel and Iran, following an Iranian strike on an Israeli-linked oil tanker, oil prices are on the rise. Experts are recommending five oil stocks to buy on Monday, anticipating a further surge in prices due to potential disruptions in Iranian oil supplies. \n\nGoldman Sachs predicts a significant increase in Brent crude prices due to these risks. The Economic Times and The Times of India both analyze the potential impact on oil and gas prices as the situation in the Middle East heats up. \n\nInvestors are watching closely for Israel's response to the attack and its potential implications for regional stability and global oil markets. OilPrice.com highlights the market's bracing for a potential oil supply shock.  \n\nWhile the exact extent of the impact remains to be seen, investors are flocking to oil stocks as a safe haven in the face of this escalating geopolitical uncertainty."
    },
    {
        "title": "SpaceX Cleared for Monday Launch of Europe's Hera Asteroid Probe",
        "description": "US FAA authorizes SpaceX Falcon 9 vehicle for Monday flight&nbsp;&nbsp;The Indian ExpressSpaceX will launch Europe's Hera asteroid probe on Oct. 7: Watch it live&nbsp;&nbsp;Space.comAsteroid saga continues: Mission to probe 'crime scene' on Dimorphos ready for blast off&nbsp;&nbsp;WIONEuropean Space Agency launches mission to study asteroid deflected by NASA&nbsp;&nbsp;The Times of IndiaEuropean Space Agency to send spacecraft past Mars for 'crime scene investigation'&nbsp;&nbsp;The Economic Times",
        "url": "https://news.google.com/rss/articles/CBMivgFBVV95cUxOODJia3Z4ZnZSLWdoR2p3TFU4dDZGUUsxdzJHWi1IYVdNeThrYTJqNDhYUHZKZjBYMXNrOGxqc0g2T2dSN09rX0QwZHlzay1PUGhicTNYTG4wNVBxWGE1dFA1d0NPRnBHY1ZHMUFVWXZBQkhQQ1preUZScElvbnBJMkdxMDByQWNmejJUbkdFcWxUWERqTzd4b0cxUGR5WGVmd19ZVGhtaVRiTkM4eUZ2U0lJWFNxeDI0bVNZV2JR0gHEAUFVX3lxTFB4Q2xnX05LRl8xRlhkeXlVT29BZXNKLXM3cEZIUnF6OUszeUNCbmc3YVF4ZHZuY1dfbXdOZU9hTHZyNklUOTJGY1F0NFpzM3JOcnlHWGEzT2FDVTVQUE83T3hodF9BeVg0U1BOS1k3T2tjdE1yTVphcjFtTnZyb2RyQmFrT2x2YkprSzdoR0R5cnVlT2tLQnBoMzlHV0lZejhIY2NKMGJ6c2FjcnRxME5zODlIWll6MnZBMU83T1N1aEx4M1o?oc=5",
        "published_at": "2024-10-06T22:50:35+00:00",
        "category": "science",
        "news": "The US Federal Aviation Administration (FAA) has given SpaceX the green light to launch Europe's Hera asteroid probe on Monday, October 7th. The Falcon 9 rocket, set to carry the probe from Cape Canaveral, Florida, will mark a significant step in the ongoing study of asteroid impacts. Hera is part of a joint NASA-ESA mission aiming to investigate the aftermath of NASA's DART mission, which successfully impacted the asteroid Dimorphos in September 2022. Hera's objective is to analyze the crater created by DART and gather data about the asteroid's composition and structure, providing valuable insights into planetary defense strategies."
    },
    {
        "title": "Singham Returns: Ajay Devgn's Fierce Avatar Ignites Fan Excitement",
        "description": "Singham Again: Ajay Devgn Drops First Glimpse Ahead Of Trailer Release, Fans Call It ‘Blockbuster’&nbsp;&nbsp;News18Deepika Padukone to make her first appearance post the birth of her baby girl for Singham Again trailer...&nbsp;&nbsp;Moneycontrol'Singham Again': Ajay Devgn's fierce avatar takes internet by storm; Rohit Shetty teases fans with new vi&nbsp;&nbsp;TOI EtimesRohit Shetty teases new video ahead of Singham Again trailer, shares fierce glimpse of Ajay Devgn&nbsp;&nbsp;Hindustan TimesSingham Again: Rohit Shetty announces trailer date, teases Ajay Devgn's new look&nbsp;&nbsp;India...",
        "url": "https://news.google.com/rss/articles/CBMi0wFBVV95cUxQY2gwaGo1SHhkbEVpTVlmdHI3ZDNRdFpMNkx0dzFqREJ3V3hYeTVtbHNnLWVOOG9IVDdGNGFpdkNHNkVRTzUtTWhnWXFwdGhqWWtsM2tYV2xGUUdpeVEzZUNOWlladThEQURQUTVVZ2JYU2xld2pFSUVhcDVMUG5Oa0ZQOGlDYS0tejg5OXhKVEYwZWhETl9ueHUxMDh4Y0ZRNm5lTW92NnB4ZjR0TDVicFZPVEthYmFCcnNjaVdXM28wREYyNHo3RHRXb1RmY1poR3JJ?oc=5",
        "published_at": "2024-10-06T20:54:15+00:00",
        "category": "entertainment",
        "news": "Bollywood superstar Ajay Devgn has dropped the first glimpse of his highly anticipated film \"Singham Again,\" sending fans into a frenzy.  The action-packed teaser shows Devgn in his iconic \"Singham\" persona,  promising another explosive installment in the popular franchise. \n\nThe release of this first look comes ahead of the trailer launch, with director Rohit Shetty teasing a captivating video and a \"fierce\" glimpse of Devgn.  The film is generating huge buzz with fans already declaring it a \"blockbuster,\" especially following the announcement that Deepika Padukone will make her first on-screen appearance since welcoming her baby girl in the film's trailer. \n\nWhile the official trailer release date is yet to be revealed, the growing anticipation for \"Singham Again\" underscores the franchise's enduring popularity and the excitement surrounding Devgn's return as the fearless police officer."
    },
    {
        "title": "\"Tarak Mehta Ka Ooltah Chashmah\" Faces Another Change: Khushi Mali Replaces Palak Sidhwani as Sonu",
        "description": "'तारक मेहता..' की नई सोनू बनीं खुशी माली: एक्ट्रेस पलक सिधवानी को किया रिप्लेस, फैंस बोले- शो का बुरा वक्त ...&nbsp;&nbsp;Dainik BhaskarTarak Mehta New Sonu : फिर बदल गई तारक मेहता की सोनू, अब खुशी माली निभाएगी किरदार, जानें उनके बारे में सब कुछ&nbsp;&nbsp;Madhya Pradesh Hindi News Web Portal",
        "url": "https://news.google.com/rss/articles/CBMisgFBVV95cUxQUXhNa2FkSWZuZlEwQTJPWUEydWdrdG5CWnBucy1LN016ZFJlVkRtMlpWbXFwcmJXWWVLZFRQem40c0hsdnNQVkFMSkhkdEpHemRKVG5FcUFkVUFKcWQyNUczekJGNG9HbnhwNlpYdkJ4NE9wUlVWQmFxbWNsSkhEMmJqYTl4dE5YY1R5a3RGWHpqRHlsbUZHWDZJWEJVTHF2TGtHVk1sYWItcUhRakFLNlp30gG3AUFVX3lxTE9OZENQeEhyYlQxb2k5NlBnM2wybXBrY0J5VjNUaTlteVI5NVZaNzlfc0JlaHI0enF6SGJDQlFZeERnX2xVNkZkN3AtYzhvVmJXRzlOMTEzM1BOU3BWbHhyaGVNYkIyNnBGRHB6bXI4V2NRcTVNeFBtSE1MNktBU3RGdFdRS0JtV1R1T19fTGZOcHh5d1YzZG5obGkyQnNoVjd5dHhoWUptMjZ5dzZIMlE5NHB3Q0xyVQ?oc=5",
        "published_at": "2024-10-06T18:55:34+00:00",
        "category": "entertainment",
        "news": "The popular sitcom \"Tarak Mehta Ka Ooltah Chashmah\" has witnessed another major cast change. Palak Sidhwani, who played the role of Sonu, has been replaced by actress Khushi Mali. \n\nThis news has sparked disappointment among fans, who are expressing their concerns about the show's future. They believe that the frequent cast changes are negatively impacting the show's appeal.\n\nWhile details about Khushi Mali's background and acting career are yet to be revealed, fans are eagerly awaiting her debut as Sonu in the upcoming episodes."
    },
    {
        "title": "Bigg Boss 18 Premiere: Salman Khan's Search for a Bride and a Star-Studded Lineup",
        "description": "Bigg Boss 18 premiere live updates: Aniruddhacharya wants to find a bride for Salman&nbsp;&nbsp;Hindustan TimesBigg Boss 18 final list of contestants (updated live): Shilpa Shirodkar, Tajinder Singh Bagga and more&nbsp;&nbsp;Hindustan TimesBigg Boss 18: From Vivian Dsena, Shilpa Shirodkar to Alice Kaushik, here’s the full list of confirmed contestants&nbsp;&nbsp;The Indian ExpressBigg Boss 18: Confirmed list of the contestants of Salman Khan hosted controversial show&nbsp;&nbsp;The Times of IndiaBigg Boss 18 LIVE: From Hrithik Roshan’s life coach, BJP leader to ’viral bhabhi’; Check...",
        "url": "https://news.google.com/rss/articles/CBMikAJBVV95cUxPVWRMb1NJTzlfcC1VQ1N6UWRhMDFxeWp6NjFDczl6V2JzZTFPdlV0RTQtWHhSb1E5TnFiQWhxOUZRWUJQZkl5RzQ3WkRXV0NBSkNWc2ZjS19ZY0JEOWtXQVUxZXFEbUpSaHl4dnpzWUZCdDFneXd0ekppZGxaLXNsdFd5NUY4X1FyR3RnUTV0QXdjc0FXNUs5Y3htX1hyZFZ2Y0k5ZDJtWEZNS3I1LWh3OVV2b1o2ZF80WWg4TmxLSkVmLXU4aW5IODZnTjhQZUlSZjVFd1h5V0RvQTdWWWpqNlUzYlN3M3VCU25RWVl1R0ZPRzRpRlhJQjQ4WVNJa1NFbHhhMW9IZGQ5UXZvUloyQw?oc=5",
        "published_at": "2024-10-06T18:15:20+00:00",
        "category": "entertainment",
        "news": "The highly anticipated premiere of Bigg Boss 18 is underway, with Salman Khan returning as the host.  The show's first day has already seen a flurry of excitement and drama, with the reveal of a star-studded lineup of contestants. \n\nAmong the confirmed participants are actress Shilpa Shirodkar, politician Tajinder Singh Bagga, and social media sensation Alice Kaushik. The list also includes Vivian Dsena, known for his roles in popular TV shows. \n\nAdding to the intrigue is the announcement from Aniruddhacharya, a spiritual guru, who expressed his desire to find a bride for Salman Khan within the Bigg Boss house. \n\nThe premiere continues with a mix of introductions, challenges, and dramatic moments that are sure to keep audiences glued to their screens."
    },
    {
        "title": "Ola Founder Bhavish Aggarwal and Comedian Kunal Kamra Spar Over EV Service Issues",
        "description": "Bhavish Aggarwal, Kunal Kamra Fight Over Ola EV Backlog: 'I'll Pay You More Than Your Flop Comedy Shows'&nbsp;&nbsp;News18\"Sit Quiet\": Bhavish Aggarwal As Kunal Kamra Flags Ola EV Issue&nbsp;&nbsp;NDTVSit quiet: Bhavish Aggarwal after comedian Kunal Kamra flags issues with Ola EVs&nbsp;&nbsp;India TodayOla founder Bhavish Agarwal, Kunal Kamra spar over service quality issues&nbsp;&nbsp;Business Standard‘I’ll even pay more than you earned…’: Bhavish Aggarwal claps back at Kunal Kamra over Ola S1 scooter post&nbsp;&nbsp;Business Today",
        "url": "https://news.google.com/rss/articles/CBMi2AFBVV95cUxNT0FjNHNCYUtrb2ZrWGdpUW16SV8xdE4xS2lLd25Fa0tYNW5aeERLb3ZlOXBjMlpfdi13UlVzaWVrRnBQalkxUGJub194ZlI1VktCNmFkLTdxWUpubncwQXdTRlZsUUtkOGFSMFh5NWtLcXBNaUhjXzY0MmNSUDZTUFhYYmY1ZXAyVkw4dzdrY3dsZzdqT2JoUnRnRjdHYzVxQkJsOFBieUV2WXZkYzYxdXB0NENEWGhFVWRIYWVwdjZMUHNVTnNWUDFSYmE3NE5sUC1wYU9ka1TSAd4BQVVfeXFMTm9YR2o5SFZ0VXV2WU9YU2RDZGhsMFdweG83dHBJc3RlY0F2TkdpZU1GYjRFQWl0S3FQbms4MWdZa3JGeC1WdkpLdkFMSlRraUVta3pMdWcxMmJqM2JFY1FIWW9ERXFUaEl2emk1alFyOG1sdzU3Nml1N2tDY1l2MkVKeEFkRE5KWG8xZzhueDNwVTdfbkZRMUtDOXZ4Z2JoMEh5NWFSajZHWXQzY1hvdlVUZlBlQ05nbU1wQ2JJbDZqT2lWUFR2YVVERGVzN2JPbmlnU3hEa0x4bDBVQTJn?oc=5",
        "published_at": "2024-10-06T15:36:56+00:00",
        "category": "business",
        "news": "Ola Electric CEO Bhavish Aggarwal and comedian Kunal Kamra engaged in a public spat on social media, fueled by Kamra's criticism of the company's electric scooter service. The exchange began after Kamra tweeted about delays and other issues he experienced with his Ola S1 scooter.  Aggarwal responded aggressively, telling Kamra to \"sit quiet\" and offering to pay him \"more than his flop comedy shows\" to keep quiet. \n\nThe spat highlights growing consumer concerns about Ola Electric's customer service and quality control.  Despite the company's ambitious goals in the electric vehicle market, recent reports point to difficulties meeting demand and delivering a satisfactory customer experience.  This incident serves as a stark reminder that even with a promising vision, successful execution and customer satisfaction are critical for any company's long-term success."
    },
    {
        "title": "Indian Redditor Snags iPhone 16 for a Jaw-Dropping Rs 27,000",
        "description": "To prove it, the user posted a screenshot of the receipt, showing they paid Rs 26,970 on their credit card, with the rest covered by reward points they had collected.",
        "url": "https://www.businesstoday.in/latest/trends/story/iphone-16-available-in-just-rs-27000-heres-how-an-indian-redditor-got-this-deal-448954-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T15:28:22+00:00",
        "category": "business",
        "news": "A savvy Indian Redditor has sparked envy and disbelief online by claiming they purchased a 256GB iPhone 16 for a mere Rs 27,000. The user, \"Wild_Muscle3506,\" achieved this bargain by leveraging reward points from their HDFC Infinia credit card, using Rs 62,930 worth of points to offset the phone's original price of Rs 89,900.\n\nWhile the user expressed some regret for not maximizing their points on other purchases, they acknowledged the impressive deal. Other Redditors were quick to chime in, expressing disbelief at the early availability of the iPhone 16 on the Infinia portal and questioning how the user amassed such a large number of points.\n\nIt is important to note that this purchase appears to be an outlier.  While using reward points for tech purchases is a smart strategy, it is rare to find such significant discounts on premium devices like the iPhone 16. This case highlights the importance of strategically using reward programs and maximizing their benefits."
    },
    {
        "title": "Top Budget Smartphones Under ₹10,000 in October 2024",
        "description": "Best phones to buy under ₹10,000 in October 2024: iQOO Z9 Lite 5G, Infinix Hot 50 5G and more | Mint&nbsp;&nbsp;MintiQOO or Redmi Smartphone Under 10000Rs, See this mobile list&nbsp;&nbsp;Times Bull6 Best Camera Phones Under Rs 8000 In October 2024&nbsp;&nbsp;Times NowBest Mobiles Under 10000 For Every Need And Rugged Use&nbsp;&nbsp;The Times of IndiaBudget-Friendly Choices: Latest Mobile Phones Under ₹10,000 in India&nbsp;&nbsp;Airtel",
        "url": "https://news.google.com/rss/articles/CBMi_AFBVV95cUxOQjFXdDkwSHJqNnpVdnNwUng1Q0RfcDV0bV9DMGJxU2ZSNGhKSEJUTG0yaHNKeFRvU0RIYjd3STBRX19La1ZzQjEwQ3ppZV9MczA4M1piRkZuYkhLdndFMUYzT3NxRmp5V2hlUDljcjJHWHpGaE1LRXg5Yk55WldIdlcxMXNUbXZncG1PTWtUZlZQZTkxMzFkY1BjekNzb08yaFF5UDhZcFZVd3QwOXlucTlrUUZGNng0S2xUSFd5eFNnRzNTUjY2X0h2RDEySFNDZGU3alFqWjlFZWNXZzBxc0F6c0RHSzZPNkRrbVRBSjlHMU1oclJtOVVxYUjSAYICQVVfeXFMTlg0eEFRbXZ2ZFFCVUJKNlpKV2hQRkhDQ3lrTW5YUDJXWU9ZblpNZk5SYVJXTWlyQTBZeUpPSURUdkMzdEE1MzdQemFQZEl5UV9ITUo3RDdCaHR6b1hRQkg5V19rTjYzdEF4U3gyOGp1bXU1QldreWtTVDE3TzdVS2FNNGlaYndwOFdEUXVyalUxTW4wV0ptUzZtOTVEUkpTUXZrVjNodExDOWk5Ymd3U1l3VENUaGhpUURHa2NCVnl1WDJ5VmlJa0FxdEVmUnE5MzFMS1E0YW01NG9lR2FEbWNtV3BEZkdpNWoyc0s0eWJTNTFJVUJnZERteWRocWRjOWFR?oc=5",
        "published_at": "2024-10-06T14:26:25+00:00",
        "category": "technology",
        "news": "October 2024 sees a range of affordable smartphones vying for your attention. Whether you prioritize speed, camera quality, or ruggedness, there's a phone for you under ₹10,000.  \n\n**Here's a snapshot of popular choices:**\n\n* **iQOO Z9 Lite 5G:**  A compelling contender offering 5G connectivity and likely a strong performance at this price point.\n* **Infinix Hot 50 5G:** Another 5G-enabled option, potentially prioritizing camera features for those seeking good photo quality. \n* **Redmi models:**  Redmi continues to be a popular choice in this price bracket, known for its value-for-money offerings. Look for their latest releases for details.\n\n**Remember to factor in your specific needs:**\n\n* **Camera Quality:** For photography enthusiasts, consider models with larger sensors and dedicated camera features.\n* **Ruggedness:** If you need a phone that can withstand the elements, look for models with IP68 water resistance or MIL-STD-810H certification.\n* **Performance:** Gamers and multitaskers may prioritize phones with powerful processors and ample RAM.\n\n**Additional resources:** \n\n* **Mint:** Provides detailed reviews and comparisons of budget smartphones.\n* **Times Bull:** Offers insights into budget camera phones.\n* **Times Now:**  Curates a selection of budget-friendly mobiles for various needs.\n* **The Times of India:**  Highlights the latest budget phone releases in India.\n\nWith a little research and consideration of your priorities, finding the perfect budget phone is easier than you think!"
    },
    {
        "title": "Swiggy Replaces Zomato as Shark Tank India Sponsor, Deepinder Goyal Exits Show",
        "description": "Shark Tank India Sponsor Swiggy ‘Kicks Out’ Zomato CEO Deepinder Goyal From Business Reality Show&nbsp;&nbsp;News18Zomato CEO Deepinder Goyal on Swiggy kicking him out of Shark Tank India&nbsp;&nbsp;The Times of IndiaDeepinder Goyal exits Shark Tank India as Swiggy becomes sponsor&nbsp;&nbsp;afaqs!Shark Tank India Season 4 launches: Anupam Mittal and others return, but where's Zomato CEO Deepinder Goya&nbsp;&nbsp;The Economic Times‘Kicked me out,’ Zomato CEO Deepinder Goyal says as Swiggy is set to sponsor Shark Tank India Season 4&nbsp;&nbsp;Mint",
        "url": "https://news.google.com/rss/articles/CBMi0wFBVV95cUxNcG9lYnBNdVJYUVlRdEFSOVl6T2JMU21XRUFLSmJ4QmExVFdTYXZQdWl0RktUQmNxanc3VGpHWHlYREhhRGI0c210RHFvR1k3NHNMTkduNmQyeHNzWkdaTEw2Z0VUaEJSLXl3czEyLUFoeEpaWWdFc01xVWs1R3ZoekNJWVk1c0s4NGR0c2FTblFHNVpfbldyd2FUVHRlYXIxb0JBNXVjdEJWZlBjOTB2a2NVelRyZmExUkd1UDBNUllVeHNvbkpXLWVzVkZvUlBUbUF30gHYAUFVX3lxTE5JUGwtM190NE1vYnJ2eDRUcW5HRk1ELS1UN25TTk4ycWp2cGVfZHNCdjFheGJsZ1ROc2VtT0lKSVY0TzBqekQwdFVlb011dUR4ZWZRVmVtWmVwdmRid3poSWVKOUkwUnhFam5xRi1KODRSdm96bVhFNDZ0V050Rmg1aTBpeHZpMUJYVkJTMmNvMVJvQWV3Z3ZkbllGRlNJMWFXLU9ERkIzeHZfY2pNZmR5aWZYN1p4X2pfLWZkalpBRWNwSnhGbHhfMF8yTHpnM0NGYnd1dTZHWA?oc=5",
        "published_at": "2024-10-06T14:12:50+00:00",
        "category": "business",
        "news": "Swiggy has replaced Zomato as the sponsor of the popular business reality show, \"Shark Tank India,\" leading to the departure of Zomato CEO Deepinder Goyal from the show.\n\nGoyal confirmed his exit, stating that he was \"kicked out\" following Swiggy's sponsorship. While the specifics of his departure remain unclear, it's likely related to potential conflicts of interest between the two food delivery giants.\n\nThe fourth season of \"Shark Tank India\" will feature the return of familiar faces like Anupam Mittal, but with a new sponsor and a notable absence in the investor panel."
    },
    {
        "title": "Canadian Dream Turns Sour:  Students Queue for Waiter Jobs, Sparking Online Debate",
        "description": "The video, reportedly filmed in Toronto, Canada, shows dozens of students lined up outside a restaurant, hoping to secure a job as a waiter or server. The clip has been accompanied by comments expressing disappointment and frustration with the situation.",
        "url": "https://www.businesstoday.in/latest/trends/story/didnt-see-this-number-of-youths-lined-up-for-a-job-even-in-india-netizens-shocked-after-students-queue-in-line-for-waiter-jobs-in-canada-video-goes-viral-448950-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T14:02:08+00:00",
        "category": "business",
        "news": "A video showing a long queue of Indian students in Toronto, Canada, vying for waiter positions at a new restaurant has sparked heated online discussions. The video, shared on X,  shows dozens of hopefuls lining up outside the eatery, a stark contrast to the \"Canadian dream\" many envisioned.\n\nWhile the video's authenticity hasn't been confirmed, it resonated with many, especially those familiar with the struggles faced by Indian students seeking employment in Canada.  Many commenters pointed to the irony of highly qualified individuals, including engineers and MBA holders, accepting low-wage jobs, having left behind promising careers in India.\n\nThe video highlights the disparity between the romanticized perception of Canada as a land of opportunity and the reality of a challenging job market. Some voiced concerns about the potential for a serious unemployment issue, particularly for young graduates. \n\nThe video sparked empathy for the students facing these difficulties, while also highlighting the need for introspection regarding the pursuit of the \"Canadian dream.\" It serves as a reminder that the path to success abroad is not always smooth, and the reality may fall short of expectations."
    },
    {
        "title": "Salman Khan's \"Bigg Boss 18\" Premiere: Aniruddhacharya and a Bride Search",
        "description": "Bigg Boss 18 premiere live updates: Aniruddhacharya to find a bride for Salman&nbsp;&nbsp;Hindustan TimesBigg Boss 18 contestants list: Shilpa Shirodkar, Vivian Dsena, Rajat Dalal, Eisha Singh, others to join Salman Khan show&nbsp;&nbsp;DNA IndiaBigg Boss 18: Confirmed list of the contestants of Salman Khan hosted controversial show&nbsp;&nbsp;The Times of IndiaBigg Boss 18: Salman Khan gets ‘Bhagwat Gita’ from special guest, 1st episode to reveal 2 finalists&nbsp;&nbsp;The Economic TimesBigg Boss 18 Promo: Vivian Dsena To Participate In Salman Khan-Hosted Show&nbsp;&nbsp;NDTV Movies",
        "url": "https://news.google.com/rss/articles/CBMikAJBVV95cUxPVWRMb1NJTzlfcC1VQ1N6UWRhMDFxeWp6NjFDczl6V2JzZTFPdlV0RTQtWHhSb1E5TnFiQWhxOUZRWUJQZkl5RzQ3WkRXV0NBSkNWc2ZjS19ZY0JEOWtXQVUxZXFEbUpSaHl4dnpzWUZCdDFneXd0ekppZGxaLXNsdFd5NUY4X1FyR3RnUTV0QXdjc0FXNUs5Y3htX1hyZFZ2Y0k5ZDJtWEZNS3I1LWh3OVV2b1o2ZF80WWg4TmxLSkVmLXU4aW5IODZnTjhQZUlSZjVFd1h5V0RvQTdWWWpqNlUzYlN3M3VCU25RWVl1R0ZPRzRpRlhJQjQ4WVNJa1NFbHhhMW9IZGQ5UXZvUloyQ9IBlgJBVV95cUxOcmZHTjBsUkZTX2xpTWFMckZtNnEzSzBnSVhIenJPZUVxOVZqcGtuSVVKQkU5dkd4QTBta1FrcldiNnk5UnA4ZUxQRjlpT25Tanl0VElON1haeXJ4VmhKd2dtWnpMVmk5UVhraGd1RE55cXNfZ0w2WWt4c3RlYnZKNTNiQUQ2RWQxWnJ0MFZmbWRWNkowSnhXYzJycHVPX1FEVVczMkJmdWZlbUFDYTRTSi1WVTVjc2lqeUN1WXlxeGJGemhfTW9mOWZtdkc5SzEySEFWdEkzU1dJYkRtVEVFT2dPTDQzSTE0VDFVLXF0ZWc3azZnNHB2Q05abEtkWEphVHBNdUNMU0lTcWJGOWg2U3dadEVjUQ?oc=5",
        "published_at": "2024-10-06T13:40:43+00:00",
        "category": "entertainment",
        "news": "The highly anticipated premiere of \"Bigg Boss 18\" is underway, with Salman Khan returning as host.  \n\nThe show's first episode will feature a surprise guest appearance by renowned astrologer Aniruddhacharya, who will be helping Salman Khan find a suitable bride.  \n\nSeveral contestants have been confirmed, including Shilpa Shirodkar, Vivian Dsena, Rajat Dalal, and Eisha Singh.  \n\nThis season promises excitement, drama, and unexpected twists, including the revelation of two finalists during the premiere.  \n\nStay tuned for updates on the show's exciting journey!"
    },
    {
        "title": "Bengaluru's Broken Footpaths Turn Walking into an \"Extreme Sport\"",
        "description": "In the video, a software professional in Bengaluru compared walking in the city to an extreme sport after a close call last week. He narrowly avoided falling and getting injured while trying to board a bus at the Konanakunte bus stop near Forum South Mall.",
        "url": "https://www.businesstoday.in/latest/trends/story/walking-in-bengaluru-is-an-extreme-sport-techie-shows-broken-footpaths-video-goes-viral-448946-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T13:27:43+00:00",
        "category": "business",
        "news": "A Bengaluru techie has sparked outrage online after sharing videos highlighting the city's dangerously broken footpaths. Yogeesh Prabhuswamy Gandige, 41, documented the hazardous conditions at the Konanakunte bus stop, near Forum South Mall, where he narrowly avoided injury while trying to board a bus. \n\nThe video shows cracked footpaths, rainwater-filled drains, and debris strewn across both the pavement and the road, forcing commuters to navigate precarious terrain. Gandige, who regularly uses this stop, described walking in Bengaluru as an \"extreme sport\" requiring \"skill to balance on tiny concrete strips and to jump from footpath to road.\"\n\nThe video has drawn criticism of the Bruhat Bengaluru Mahanagara Palike (BBMP), the city's civic body, with many users noting that the faulty drainage structures are part of a recent \"smart city\" rainwater sponge project.  The incident highlights a growing concern about the lack of pedestrian safety in Bengaluru, with residents pointing to similar issues across the city, including Whitefield, where construction work has created further obstacles.\n\nThe viral video serves as a stark reminder of the challenges faced by pedestrians in Bengaluru, demanding improved infrastructure and a commitment to pedestrian safety."
    },
    {
        "title": "Market Experts Recommend Stocks to Buy Amidst Correction",
        "description": "Buy or sell: Sumeet Bagadia recommends three stocks to buy on Monday — Oct 7 | Stock Market News&nbsp;&nbsp;MintShould you start buying the dips? Consider Reliance, L&T & bank stocks on further fall: Sandip Sabharwal&nbsp;&nbsp;The Economic TimesTop 24 stocks to buy, sell and avoid in the coming market correction&nbsp;&nbsp;MoneycontrolL&T Finance, HPCL, Zensar Tech & Nalco: SMC Global shares target prices for these 4 stocks&nbsp;&nbsp;Business TodayWant to BUY stocks in falling market? Know top 4 picks by Axis Securities' Rajesh Palviya&nbsp;&nbsp;ET Now",
        "url": "https://news.google.com/rss/articles/CBMi2wFBVV95cUxOMkNyVmhJNDZUWDNENFFfNE5VZUJPTTI0Y3ZqWFNfMWdBQlBSUzc1R2RrVUhacUtOQlNJUUM0WmJTN1o0UFdjWEJ0a0JKMHJmWDlFSWJOMkdoT0NEd1p2emZhWFZBZFdrYmsyVUs4SXBjeDgtM24zUXo5LUtLcnRQM1ByVXpLcm5HcThIbG1BcGtZWnhqcEY3U1pnMHhoNXV2MWtINXBZTlJyOWxGOUxtM096SlZDNWlmVmNzdThwNXJHZzVveEk3eC1WY0oxNFVldmhFYmx6VTd5TzDSAeABQVVfeXFMTTNoTWFPaEJ1eXM3R0hVM3RCODJrbGtJYzlKOVdrTkJEekdGSDltdUJiRjY2XzBjNEpyQW9seTIwR2NMb3hjZXl6Y3dXbWlUVVNkelpGTWdQZ0FIVW1MWnZCR0ZhNjN5ajVxX2FHX1JjZXdySGkycWR3bXhjZDdEM2pnallXZXRkMklZV05VaWdKMGEzUWVKaF9EVDlva0NIMDRtTkE2dUw4NEU5SDdNZmdNUGFaamh2b25BbVdSVDhwbFJDRDVwbDJUNnI1bUZ5MnNiZDYtUm12T2IxeE54Wlk?oc=5",
        "published_at": "2024-10-06T10:12:17+00:00",
        "category": "business",
        "news": "While the market is experiencing a correction, some financial experts are suggesting stocks to buy, recognizing potential opportunities. \n\n**Sumeet Bagadia**, a market expert, has not publicly revealed specific stock recommendations for Monday, October 7th. However, other financial analysts are offering insights.\n\n**Sandip Sabharwal** advises investors to consider **Reliance, L&T, and bank stocks** as potential buys if the market dips further. **Moneycontrol** suggests 24 stocks to buy, sell, or avoid during the correction. \n\n**SMC Global** has provided target prices for **L&T Finance, HPCL, Zensar Tech, and Nalco.** Finally, **Rajesh Palviya of Axis Securities** recommends four stocks for investors looking to buy in a falling market, though the specific names were not mentioned in the provided information.\n\nThese recommendations highlight the potential for finding value during market downturns. However, investors should conduct thorough research and consider their own risk tolerance before making any investment decisions."
    },
    {
        "title": "Ola CEO Bhavish Aggarwal and Comedian Kunal Kamra Spar Over EV Service Issues",
        "description": "The argument began when Kamra posted an image showing a large number of EV scooters at an Ola service center, questioning the company's customer service.",
        "url": "https://www.businesstoday.in/latest/corporate/story/ill-even-pay-more-than-you-bhavish-aggarwal-claps-back-at-kunal-kamra-over-ola-s1-scooter-post-448925-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T10:02:11+00:00",
        "category": "business",
        "news": "Ola CEO Bhavish Aggarwal and comedian Kunal Kamra engaged in a heated online exchange on X, sparked by Kamra’s criticism of Ola Electric's S1 series scooter service. \n\nKamra’s post, featuring an image of numerous scooters at an Ola service center, questioned the company's customer service. Aggarwal responded by challenging Kamra to visit an Ola service center and help address the issues, offering to pay him more than his \"failed comedy career.\" He also claimed Kamra's tweet was \"paid,\" a claim Kamra denied. \n\nThe exchange escalated with Kamra urging Aggarwal to offer refunds to dissatisfied customers and Aggarwal maintaining that Ola has programs in place to address customer issues.\n\nThe public spat comes amidst a challenging period for Ola Electric, as the company witnessed a significant decline in sales in September. The company has faced criticism over malfunctioning hardware and software issues with its S1 series scooters."
    },
    {
        "title": "JWST Unravels the Mystery of Planet-Forming Disks",
        "description": "Winds of change: James Webb Space Telescope reveals elusive details in young star systems&nbsp;&nbsp;University of Arizona NewsThe nested morphology of disk winds from young stars revealed by JWST/NIRSpec observations&nbsp;&nbsp;Nature.comJames Webb Space Telescope reveals evidence of winds that could solve mystery of how planet-forming disks are shaped&nbsp;&nbsp;Clemson News",
        "url": "https://news.google.com/rss/articles/CBMisgFBVV95cUxNREFLZzdWWnYyV2M1bVZqZHp0cThQZUdXSUI0Undjd19PMDFVTWJDYTNKenhpNWpZbjhhRHEwWTJUWllhRmVURFJWZUZSTDZ3VGREd0VBVWRSZG9WUy12U3VlZnlsMlViRzVpdmI2NS1LV2JVUkpVVmYzUXItdmMyNHI3SGpKamN0NWZCYmppTnZMV2dhNkpyVjZ0c3NFOXFfdzNCelU3VXpQelhkcVd3QVNR?oc=5",
        "published_at": "2024-10-06T09:04:14+00:00",
        "category": "science",
        "news": "The James Webb Space Telescope (JWST) is revealing new details about the formation of planetary systems, thanks to its unprecedented sensitivity and resolution. New observations have captured evidence of powerful winds emanating from young stars, potentially solving the long-standing puzzle of how planet-forming disks are sculpted.\n\nThese winds, detected using JWST's Near-Infrared Spectrograph (NIRSpec), exhibit a nested morphology, meaning they have complex structures within the disk. This discovery, published in *Nature*, suggests that these winds play a crucial role in shaping the disks and influencing the formation of planets within them. \n\nThis research, led by scientists at the University of Arizona and Clemson University, sheds new light on the dynamic processes at play during the early stages of star formation. The findings offer valuable insights into the evolution of planetary systems and the conditions that govern the birth of planets."
    },
    {
        "title": "New Ovarian Cancer Vaccine Receives Funding from Cancer Research UK",
        "description": "Ovarian Cancer Vaccine : ओवेरियन कैंसर के खिलाफ नई वैक्सीन को कैंसर रिसर्च यूके से मिली आर्थिक सहायता&nbsp;&nbsp;प्रभात खबर - Prabhat Khabar",
        "url": "https://news.google.com/rss/articles/CBMiowFBVV95cUxQTnRtR0pEX1o1SWxLaU9xUVRLbnBZOVdQbEtTbVJPYVlxdi1sR2FZeHk5RHFjTEJkSjkyYU84Q00xWXVrMlJ2aTV5Z2pJTWtkUVI4MjlsSnF5S1lQT25nejl2VDhIem14cHk3d2otUVAteDB3WG1Cc0habjJGcmF4eE1yUFlyekUwdjVZLUN2dFhJcG4xdkVrOHRZTldTZlpMSkU00gGoAUFVX3lxTE5iQlBOMDVWNC00SW9la1pkcEk3UEJGdDhsc2VoUjBuZFF5bzkxVFU1Q0hiMWpxMHM0R2RrY2dRUUdlNEtMYTB1Mm5aby1ibHdUNDRmSE9TSThicGducjNrb05udU1XMWdReElRNUZOM2Z0cjZxMTNxbDdDUmx3NlN1MDctZ0stOEVHRlBkazBmbTZrekE5dUp4ek1wdDNTdG0wTHo5cnRNbQ?oc=5",
        "published_at": "2024-10-06T08:40:10+00:00",
        "category": "health",
        "news": "A new vaccine aimed at tackling ovarian cancer has received funding from Cancer Research UK. The vaccine is still in its early stages of development, but if successful, it could offer a crucial new weapon in the fight against this deadly disease.  The specific details of the vaccine and the research team involved have not yet been released."
    },
    {
        "title": "India's Largest Hydrogen Blending Project Launched in Ahmedabad",
        "description": "The project will provide uninterrupted hydrogen-blended natural gas to 4,000 domestic and commercial consumers. The move is expected to cut emissions and help the country meet its net-zero targets. ",
        "url": "https://www.businesstoday.in/latest/corporate/story/green-energy-adani-total-gas-total-energies-india-hydrogen-blending-natural-gas-ahmedabad-energy-security-448914-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T08:36:59+00:00",
        "category": "business",
        "news": "Adani Total Gas Ltd, a joint venture between the Adani Group and French energy giant TotalEnergies, has commissioned India's largest hydrogen blending in natural gas project in Ahmedabad. This project will supply hydrogen-blended natural gas to 4,000 domestic and commercial consumers in Shantigram, Ahmedabad.\n\nThe company is starting with a 2.2-2.3% blend of green hydrogen in the natural gas supply, aiming to gradually increase it to 5% and eventually 8%. This move is expected to significantly reduce emissions and contribute to India's net-zero goals.  \n\nHydrogen is injected into the natural gas pipeline, resulting in a blend that generates heat and power with lower emissions compared to using natural gas alone. The company claims this initiative paves the way for a cleaner, greener future and ensures cleaner air for everyone. \n\nThis project is a major step forward in India's green energy push and highlights the growing interest in hydrogen blending as a way to decarbonize the energy sector. While challenges remain, such as the cost of production and potential corrosion issues, ongoing research and development are paving the way for wider adoption of this technology."
    },
    {
        "title": "Honda Amaze Gets a Festive Makeover for Dussehra",
        "description": "इस दशहरा शानदार डिजाइन के साथ लांच हो रहा Honda का यह शानदार कार Amaze&nbsp;&nbsp;Dailynews24फेस्टिव सीजन में Honda Cars पर बंपर डिस्काउंट, होंडा सिटी पर मिल रही सबसे ज्यादा छूट&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)Honda Discounts: होंडा अमेज समेत 3...",
        "url": "https://news.google.com/rss/articles/CBMieEFVX3lxTE42SU1TSDZFUzlQRUdJekswX3hqRmt5aEcxOHE4OTljd2xmcjdFM2FJTDd0LU5uMDRDWUoyQk1mZUZSU0RkUmJ1VHMyYk9wVFdWQ1M1R1Q1SGtDVGFrY2lBWkJuem5tcWtaRmRaNG41MkVsd3Q2b0JVeA?oc=5",
        "published_at": "2024-10-06T07:33:15+00:00",
        "category": "business",
        "news": "Honda is set to launch a new, redesigned Amaze this Dussehra, according to reports from Dailynews24.  This comes alongside a wave of festive season discounts across the Honda car lineup, with the Honda City reportedly offering the most significant savings.  While details on the new Amaze design remain under wraps, the upcoming launch promises a stylish update for the popular sedan."
    },
    {
        "title": "Vada Pav Vendor's Income Surprises Internet: Earning Rs 24 Lakh Annually",
        "description": "Calculating for a full month, the vendor’s income reaches an impressive Rs 2.8 lakh (roughly $3,300). After expenses, the vendor nets about Rs 2 lakh ($2,400) monthly, or Rs 24 lakh ($29,000) annually—a sum that rivals many white-collar salaries in India.",
        "url": "https://www.businesstoday.in/latest/corporate/story/rs-24-lakh-annually-vada-pav-sellers-income-matches-white-collar-paychecks-internet-reacts-to-business-idea-448909-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T06:29:07+00:00",
        "category": "business",
        "news": "A viral video showcasing the earnings of a Mumbai street vendor selling vada pav has sparked widespread astonishment, proving the potential of small businesses. \n\nVlogger Sarthak Sachdeva spent a day working at a local vada pav stall, documenting his experience. He observed a high demand, selling over 600 vada pavs at Rs 15 each. This translates to an impressive daily income of Rs 9,300. \n\nExtrapolating this to a monthly income of Rs 2.8 lakh, the vendor nets around Rs 2 lakh per month after expenses, resulting in a yearly income of Rs 24 lakh. This figure rivals many white-collar salaries in India.\n\nThe internet reacted with disbelief and humor, with viewers questioning their own career choices and expressing interest in starting food stalls. The video highlights the potential for high earnings from seemingly simple street food businesses, emphasizing the importance of location and efficient operations."
    },
    {
        "title": "Indigo's Arrogance Could Cost It: Ace Investor Vijay Kedia Warns",
        "description": "Kedia warned that Indigo’s arrogance could be its undoing, stating, “If these issues aren’t addressed, people will shift to other options.”",
        "url": "https://www.businesstoday.in/latest/corporate/story/dont-let-arrogance-ace-investors-vijay-kedia-cautions-indigo-as-delays-and-rude-staff-frustrate-flyers-448905-2024-10-06?utm_source=rssfeed",
        "published_at": "2024-10-06T05:11:25+00:00",
        "category": "business",
        "news": "Renowned investor Vijay Kedia has publicly criticized India's leading budget airline, Indigo, for its declining customer service and reliability. Kedia, a frequent flyer and shareholder in the company, expressed his disappointment on social media, stating that Indigo has become his \"last choice\" due to frequent flight delays and rude staff at check-in counters.\n\nKedia's warning comes as Indigo faces increasing competition from a revitalized Air India and other carriers seeking to regain market share. He believes that Indigo's dominance, currently holding 62% of the domestic market, could be threatened if the airline doesn't address these issues. \n\nHe stressed that customer service is crucial for brand reputation and urged Indigo to rectify the situation before it's too late. \n\nKedia's concerns are echoed by many passengers who have taken to social media to complain about Indigo's recent performance, including a recent technical glitch that caused disruptions to the airline's website and booking system, leading to delays and long queues at airports.\n\nWhile analysts remain cautiously optimistic about Indigo's future, Kedia's warning serves as a reminder that customer satisfaction and a strong reputation are essential for any company's long-term success, especially in a highly competitive industry."
    },
    {
        "title": "Barbie Celebrates Diwali with Indian-Inspired Doll",
        "description": "Barbie releases new doll for Diwali to 'celebrate the power and beauty of diversity'&nbsp;&nbsp;USA TODAYBarbie Got An Indian Makeover In Time For Diwali 2024 In An Anita Dongre Lehenga&nbsp;&nbsp;NDTVThis Deepavali, Barbie dons Anita Dongre&nbsp;&nbsp;The HinduAnita Dongre unveils the first Diwali Barbie dressed in Rajasthan-inspired lehenga: 'Looks like Priyanka Chopra'&nbsp;&nbsp;Hindustan TimesBarbie announces a global collaboration with designer Anita Dongre&nbsp;&nbsp;afaqs!",
        "url": "https://news.google.com/rss/articles/CBMiiwFBVV95cUxPQ1daU01jalZ6eW9XcVowbG9OMkJlWmkyc3g5ckNDbzRoNElLa1ZjcUQycnNLY3FsRHE2RVJOa0hCeGptMEZScjdlamRqMEFwUTV5ZUVkd3VlNUgxN21tbllkWE5XbU1meW1zckEtRTU3dUlTRkJXRkM0VWZFaXpGOVRGUkRudnNzaktv?oc=5",
        "published_at": "2024-10-06T03:40:55+00:00",
        "category": "entertainment",
        "news": "Barbie has unveiled a new doll for Diwali, featuring an Indian-inspired design. The doll, dressed in a vibrant Rajasthan-inspired lehenga created by Indian designer Anita Dongre, aims to celebrate diversity and the beauty of Indian culture. \n\nThis collaboration marks Barbie's commitment to representing the world's diverse cultures and showcasing the power of inclusion. The doll is expected to resonate with Indian consumers and audiences worldwide, further strengthening Barbie's global appeal."
    },
    {
        "title": "Maruti Suzuki Offers Bumper Discounts During Festive Season",
        "description": "फेस्टिव सीजन में Maruti Suzuki की गाड़ियों पर बंपर डिस्काउंट, Jimny पर 2.3 लाख तक की छूट&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)34kmpl की माइलेज, 6.66 लाख कीमत, Maruti की इस कार के हर दिन बिक रहे 500 यूनिट्स&nbsp;&nbsp;News24 Hindiनवरात्रि और दीवाली पर मिल रहा Maruti WagonR...",
        "url": "https://news.google.com/rss/articles/CBMi3wFBVV95cUxOOGpUd1FhQzUtdG1MR3l4MmFGWlhKUHFtc0RhMGFqMGI4TzktMnM5clZRSDZqYXRmOTJIVTkyVDlFOUZ2N21fNzkwRk1sZkZCWHMwRkZQN0cyRUtsU3VldW5FQW5ZM1N5bkcxMGhLN3BJMWdteXlBTm5XMTM3T05MeGkxWWNIMzFqaVFkUVpmQmRLR0NhYWlBeC1IbmR0aVppcW5iTVl0dEdEdm01LURtWjhPVUtwSWg5LW4yaUl5WGxKQ0drdVNBQWpqUklLSXVSMGpqOWZndXlZM2NIRkJZ?oc=5",
        "published_at": "2024-10-06T02:59:32+00:00",
        "category": "business",
        "news": "Maruti Suzuki is offering substantial discounts on its vehicles during the festive season, with the Jimny receiving the most significant savings of up to INR 2.3 lakh. \n\nThe discounts are being offered to boost sales during the festive season, which is typically a high-demand period for cars in India. \n\nWhile the specific models and discount amounts haven't been officially confirmed, the news has been circulating in the Indian automotive media. \n\nThis announcement comes after news of the strong performance of the Maruti WagonR, with reports claiming the car is selling 500 units per day."
    },
    {
        "title": "Dhanteras 2024: Expect Big Smartphone Discounts",
        "description": "Dhanteras 2024 Smartphones Discount: धनतेरस पर ये फोन होंगे सस्ते, फीचर्स भी जबरदस्त | News Track in...&nbsp;&nbsp;NewstrackAmazon Sale में बंपर ऑफर, सस्ते में मिल रहा OnePlus 12R&nbsp;&nbsp;Aaj Tak8GB RAM, 50MP कैमरा और 5000mAh बैटरी वाले Realme Narzo 70x 5G को सस्ते में खरीदने का मौका, Amazon Sale में Di&nbsp;&nbsp;TechlusiveFlipkart Sale: Samsung Galaxy S23...",
        "url": "https://news.google.com/rss/articles/CBMiqAFBVV95cUxQeHp0YzcyeWdjX09IYmtNcVN3WjlYZmRPM3htV3dVVWdtRXN1WEZWSDRoSmtwM1lSR0VXZVc3RDhXOEVRYTd2U2d5R0ljd1pRZUxkbzJvVVVqMmphUnFzNEJfb3RzQUU2N1RBUWZpekZUQjZSVnZNbmU5R1FObHJUZU5zZlZ6WW1JejZ1c2JXSGlTcHdZMTVMZk5fdWlwOFdLRWxwWjNvbW3SAa4BQVVfeXFMTXdhQ2JfbTE1d0ZlNHZaN2sxVDQzVlp3TmNVMWNZdElGUG1kSGVqTk1aS0FKZjhXSlptdldlRTNBdW1ROENKeTVnSks3eDZTUjZERmRSY1oxV0t5Y3d1a0syOVdqam9QdzFrY0dLbDZacmQ3aE4zNk84alh4MG1OVGpGVWhuOFpBUGxsenFnbjdNckI2UnpIcXE1bTR1SzhCYWRNUFUxZ2pLZmpKc2RB?oc=5",
        "published_at": "2024-10-06T02:00:31+00:00",
        "category": "technology",
        "news": "The auspicious festival of Dhanteras, celebrated on October 24, 2024, is expected to bring a wave of discounts on popular smartphones. \n\nMajor e-commerce platforms like Amazon and Flipkart are already hinting at attractive deals on top-tier models. The OnePlus 12R is rumored to be available at a significant discount on Amazon, while Flipkart is expected to offer a price reduction on the Samsung Galaxy S23 series.\n\nFor those seeking budget-friendly options, the Realme Narzo 70x 5G, boasting 8GB RAM, 50MP camera, and a 5000mAh battery, is also anticipated to receive a price cut during the Dhanteras sales. \n\nStay tuned for more information on specific deals and offers as they are announced."
    },
    {
        "title": "Agra Schools Vaccinate 3982 Students to Prevent Diphtheria",
        "description": "Agra News : Vaccination to prevent Diphtheria in Agra #Agra&nbsp;&nbsp;AgraleaksAgra News: स्कूलों में 3982 छात्रों का किया गया टीकाकरण&nbsp;&nbsp;अमर उजाला",
        "url": "https://news.google.com/rss/articles/CBMihgFBVV95cUxQazROeHBSY2VEMVNnLThNRHo1aG1nTHNRbWczWFlNdlZyQ0ZqU0doNVJuaXd3Q3ZvRFhHamVFaGVnZERscHlrNW1yTXNkblctNjVuZjZjd1ZhUFdFaXJ2emJDVFR3ZHlDOUF2aEFlWTVJR3E1ZWVET3NpMXMtUjdDNFVuYWhFUQ?oc=5",
        "published_at": "2024-10-06T01:46:14+00:00",
        "category": "health",
        "news": "Agra, India -  A recent vaccination drive in Agra schools has successfully immunized 3982 students against diphtheria. This initiative aims to prevent the spread of this potentially life-threatening bacterial infection."
    },
    {
        "title": "HMD to Launch New Flagship Smartphone with Powerful Camera and Self-Repair Feature",
        "description": "HMD जल्द लांच करेगा धांसू कैमरा वाला फ्लैगशिप स्मार्टफोन, नए फीचर्स के साथ सेल्फ रिपेयरिंग सुविधा&nbsp;&nbsp;Punjab KesariHMD ला रहा तगड़े कैमरा वाला फ्लैगशिप स्मार्टफोन, खुद से रिपेयर करने की मिलेगी सुविधा&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)HMD Moon Knight...",
        "url": "https://news.google.com/rss/articles/CBMiowFBVV95cUxPOG9mSTBrT0RySWNaRlJBRHBvbzNRSFF5TS1GdjN3YjNsRDF6QlhmbWJJLUN6XzNlNHBhQWI4eUc2djI0YjVhc2RpRVF1RzktUEl6YUh5b21POWh1UncwdWpoSGpJeW5VeUFFcmVLVzNGdXVWQzFqOWljUzdEaFFZZ1ljS3NDc25JVWhQaUZpb3JYVnpqSVRVZWZkSWVhZW9hc1dJ?oc=5",
        "published_at": "2024-10-06T01:40:15+00:00",
        "category": "technology",
        "news": "HMD Global, the Finnish company behind Nokia phones, is set to release a new flagship smartphone with an impressive camera system and a unique self-repair feature. This new model will offer a powerful camera experience alongside the ability for users to repair minor issues themselves. \n\nWhile specific details remain unclear, reports suggest that the phone will be equipped with cutting-edge camera technology and will allow for easy repairs by its users. This could be a game-changer for smartphone owners, as it would allow them to fix small problems without having to send their phone to a repair center. \n\nHMD Global has not confirmed the official launch date or the name of this upcoming flagship. However, this move highlights the company's dedication to innovation and its commitment to providing users with a more convenient and personalized smartphone experience."
    },
    {
        "title": "\"Wolfs\": A Fun, Familiar Romp with Clooney and Pitt",
        "description": "Directed by Jon Watts, Wolfs delivers a familiar but energetic ride, brimming with sharp humour, clever twists, and the kind of slick banter that will remind any fan of the Ocean’s trilogy.",
        "url": "https://www.businesstoday.in/lifestyle/reviews/story/wolfs-review-george-clooney-and-brad-pitt-bring-their-a-game-to-a-fun-action-comedy-romp-448897-2024-10-05?utm_source=rssfeed",
        "published_at": "2024-10-05T17:58:17+00:00",
        "category": "business",
        "news": "\"Wolfs,\" directed by Jon Watts, reunites Hollywood heavyweights George Clooney and Brad Pitt in a familiar yet energetic action-comedy.  The film plays on the established chemistry of the duo, reminiscent of their \"Ocean's\" trilogy days. Clooney portrays a refined fixer, while Pitt embodies a more chaotic counterpart, their rivalry driving the plot. \n\nThe film features sharp humor, clever twists, and a fast-paced style, delivering a nostalgic feel for fans of the \"Ocean's\" franchise.  The movie leans into the signature snappy dialogue, sleek visuals, and action-comedy blend made popular by the \"Ocean's\" series. While not groundbreaking, \"Wolfs\" offers a lighthearted and enjoyable watch for those seeking a fun weekend movie experience."
    },
    {
        "title": "\"188-Year-Old Man\" Rescued in Bengaluru? A Viral Video Debunked",
        "description": "The 24-second video shows two men helping an elderly man with a white beard who is hunched over and using a walking stick. While the video went viral, the remarkable claim about the man's age was met with skepticism from fact-checkers and social media platforms.",
        "url": "https://www.businesstoday.in/latest/trends/story/188-year-old-man-rescued-in-bengaluru-heres-the-truth-behind-the-viral-video-448894-2024-10-05?utm_source=rssfeed",
        "published_at": "2024-10-05T14:51:54+00:00",
        "category": "business",
        "news": "A video claiming to show the rescue of a 188-year-old man from a cave near Bengaluru went viral on social media, attracting over 34 million views. However, fact-checkers and social media platforms have debunked this claim. \n\nThe video shows two men assisting an elderly, white-bearded man who uses a walking stick.  While the video gained significant attention, the age claim was met with skepticism. \n\nFact-checking groups, including D-Intent Data, have identified the man as Siyaram Baba, a Hindu saint from Madhya Pradesh, India. Reports confirm his age to be around 110 years old, not 188.  \n\nSocial media platform X, formerly known as Twitter, has added a disclaimer to the original post clarifying Siyaram Baba's identity and true age. \n\nThe viral video highlights a growing trend of social media influencers spreading exaggerated and unverified claims to attract attention. Fact-checkers urge users to be critical of such content and verify information before sharing."
    },
    {
        "title": "Post-Intimacy Hygiene: Why It Matters",
        "description": "संबंध बनाने के बाद तुरंत करें ये काम, वरना हो सकती है गंभीर बीमारी&nbsp;&nbsp;India News Haryana",
        "url": "https://news.google.com/rss/articles/CBMi0gFBVV95cUxPVlphQVhXcXNMZkQ5bUN6MXhrdm1XSTJoTlZtUmxvbE1Zc2hFZGpuNEM5MGFtaEphRVhsZzBrRFJTM0NxeTE4NHBjSE41RjlUR2haNWFHZmp4WERWclo0UDRvenl5TDdTMWZZdk9mVFRBUEZ0Rl9henFLX2FiZkFlZS1oSWNhd0xGdTAzS1NYOUk4MzBxZlRSMy1ud0ZNR1NJb2tqbjVqSHJsVWlWdm1qOV9LNWdObDNwWnY1ZVE3a2ZXcWdBSEw3WHFfbEw1TmlfX1HSAdIBQVVfeXFMT1ZaYUFYV3FzTGZEOW1DejF4a3ZtV0kyaE5WbVJsb2xNWXNoRWRqbjRDOTBhbWhKYUVYbGcwa0RSUzNDcXkxODRwY0hONUY5VEdoWjVhR2ZqeFhEVnJaNFA0b3p5eUw3UzFmWXZPZlRUQVBGdEZfYXpxS19hYmZBZWUtaEljYXdMRnUwM0tTWDlJODMwcWZUUjMtbndGTUdTSW9ram41akhybFVpVnZtajlfSzVnTmwzcFp2NWVRN2tmV3FnQUhMN1hxX2xMNU5pX19R?oc=5",
        "published_at": "2024-10-05T12:42:51+00:00",
        "category": "health",
        "news": "While this article title suggests a serious health risk, it's important to note that the content provided is incomplete and lacks any specific advice.  It's crucial to rely on credible sources for information about sexual health. \n\n**Here's what we know:**\n\n* **Hygiene is crucial after any sexual activity.**  Maintaining good hygiene practices after intimacy can help prevent the spread of infections and maintain overall health. \n* **Reliable sources for sexual health information are essential.** This includes doctors, healthcare professionals, and reputable organizations like Planned Parenthood.  \n\n**Important:**  It's not appropriate to provide medical advice without professional qualifications. If you have concerns about your sexual health, please reach out to a qualified healthcare professional."
    },
    {
        "title": "Salman Khan's \"Kick 2\" Officially Announced!",
        "description": "Its official! Salman Khan starrer Kick 2 announced; producer Sajid Nadiadwala shares FIRST glimpse from Sikandars set&nbsp;&nbsp;Bollywood HungamaKick Sequel: Salman Khan and Sajid Nadiadwala Team Up For The Second Installment Of 2014 Hit&nbsp;&nbsp;NDTV MoviesSajid Nadiadwala Teases Fans With `Kick 2` Announcement Amid Sikandar Shoot&nbsp;&nbsp;Zee NewsKick 2: Sajid Nadiadwala drops Salman Khan's first picture from the photoshoot; Fans say 'devil is back'&nbsp;&nbsp;TOI Etimes",
        "url": "https://news.google.com/rss/articles/CBMi6wFBVV95cUxORlhUZmdwREdlS0VvemxsYy01UmNZTGU4NzJsM3pMQjRQTExiTmV3ZVFiUlI5Q1gzeUs2YllRcEI3aHB5UmFZMnNHamZEVzNMUkI2Z2JuajJXRGh1UXQzLXp5Qk5qdEdsMWJNdDlOdHR3MkJrRUxyeVFuYVdMOE11YlJDRkM0aER2M2JrcWJPS1dnUVhKaHhCVEkySGZzamRIcFhQTTVyWWM3RXRUV04xQTI2ckR2alZOYm5hNWxpdUNCaV9YcGtRT3N2TlppZUdURTlTcGVwOUVFSVpnX2l2UnlsZ3VXRUt0bnBN0gHwAUFVX3lxTFBIVGxFZXF3cUxvWXNXTzNJckFzNlBsQ0FudHBOdmFXWWRRV2ZuQXVxSmhXMEppb2Z2T01Ga2xoZFJlRk9aNEswV0tWYVZXd3RhNlZJNEc0TnZnV29MZW1qU2JGbFpZUU00a2NYWHdRNXJEXzZLS3dNY0ZuUmRoX2YtVXl5d0lma2FDQk1ROU1IbHkwZWVWX2owUzExYVdWVlBDU3VtX1BHdzIwR3UzR1hHbERUdkdIS18yZ1hyYzlxbEx3VkNDX1R5N3VoTWU5OGJVM3QtX1QtaHo3a2t3SHJEejAxZ0NJRXFFWkhzbHNWcQ?oc=5",
        "published_at": "2024-10-05T09:02:19+00:00",
        "category": "entertainment",
        "news": "The highly anticipated sequel to the 2014 blockbuster \"Kick\" is officially in the works. Producer Sajid Nadiadwala confirmed the news, sharing a first glimpse from the set of his upcoming film \"Sikandar,\" which will feature Salman Khan in a new role. \n\nWhile \"Kick 2\" is still in its early stages of production, fans are already excited to see Salman reprise his iconic role as Devi Lal Singh, the charismatic and unpredictable antihero."
    },
    {
        "title": "Bollywood Actor Govinda Discharged From Hospital After Accidental Gunshot Wound",
        "description": "हॉस्पिटल से डिस्चार्ज हुए गोविंदा: कहा- अचानक रिवॉल्वर चल गई, खून का फव्वारा निकल गया; 3 दिन पहले खुद से गोली लगी थी&nbsp;&nbsp;Dainik Bhaskarगोविंदा ने बताया 1 अक्टूबर को क्या हुआ था और कैसे चली थी गोली, बोले- जब यह लगी तो मुझे...&nbsp;&nbsp;NDTV India...",
        "url": "https://news.google.com/rss/articles/CBMivgFBVV95cUxPeTVJSFpXeTlndEpta3BGaHF5dGZ0M0dscjZqU3hwd0pkS0NXU0lEN3F4SDRoMEJyUlUwS3RkWS1jX3hsaDlQSTdkS201SGdZcEdhbVJiSXRYN05reDJ0dEotRGx6M1ZfTVJjNmxwLTJrNEN3RmZzcm9BZlQ4U3MxSkNSdHhQXzYyMzNqZVhyelRqa0I3ZFptOFU0RzktZkVjT0Zzd2JlSnFuRUY4bUJFZ1Q4OXpXRWRGeE5PWDdn?oc=5",
        "published_at": "2024-10-05T08:16:14+00:00",
        "category": "entertainment",
        "news": "Bollywood actor Govinda was discharged from the hospital after being admitted for an accidental gunshot wound. He sustained the injury on October 1st, 2023, when a revolver he was handling went off. Govinda has stated that he experienced a sudden surge of blood following the incident. \n\nThe actor shared his account of the event, emphasizing the unexpected nature of the incident. He described the moment the gun went off and the immediate aftermath. \n\nGovinda is now recovering at home."
    },
    {
        "title": "Earth's \"Mini-Moon\" Makes a Return Visit in 27 Years",
        "description": "Earth has had two moons in the past. One of the mini-moons has visited twice and will return in 27 years&nbsp;&nbsp;WIONIt's official: Earth now has two moons&nbsp;&nbsp;Earth.comNASA to track temporary ‘mini moon’ asteroid with planetary radar — All you need to know&nbsp;&nbsp;MintCan you see Earth's new 'minimoon' with the naked eye?&nbsp;&nbsp;Livescience.comWhere and how to see Earth’s ‘Second Moon’ this autumn&nbsp;&nbsp;Condé Nast Traveller India",
        "url": "https://news.google.com/rss/articles/CBMitAFBVV95cUxQRjRQamlUYWFBenVRV0szN3lrdlV5RW5iaFBYWWdXSVAtOHJ4WDl3WjBfckZwcXZDWUZOS2w3QzVYa1QtallXcExkTkpadUZHMUJqeDFlNWdZWE40WlRsM2lCMVVDcXRQR2tlZWVTTUMyel9rWXRNXzIzUkVTOFJsUTlUVGV6SE1LLTUxcUhvYVh1NHlETWUzN1BFd0gzZ25UU0Q0U2dDY25tZXRPVU5xU2NwTUs?oc=5",
        "published_at": "2024-10-05T06:33:35+00:00",
        "category": "science",
        "news": "Earth has, at times, had more than one moon. While our familiar, large lunar companion continues to orbit us, a smaller, temporary \"mini-moon\" has visited our planet twice and is predicted to return in 27 years. This \"mini-moon\" is actually a small asteroid that gets caught in Earth's gravitational pull for a period of time.\n\nNASA is using planetary radar to track the mini-moon's path and has confirmed its presence in the past. It's unlikely to be visible to the naked eye, but its return will be a fascinating event for astronomers and space enthusiasts."
    },
    {
        "title": "India's Forex Reserves Hit Record High, Reaching $705 Billion",
        "description": "RBI Governor Shaktikanta Das has emphasized the importance of maintaining a forex buffer to protect the economy during periods of market volatility.",
        "url": "https://www.businesstoday.in/latest/economy/story/indias-forex-pile-is-the-worlds-fourth-largest-heres-what-it-does-for-the-economy-rbi-shakitkanta-das-448831-2024-10-05?utm_source=rssfeed",
        "published_at": "2024-10-05T05:12:47+00:00",
        "category": "business",
        "news": "India's foreign exchange reserves crossed the $700 billion mark for the first time, reaching a record high of $705 billion in the week ending September 27th. This surge, fueled by foreign investments in Indian stocks and bonds, positions India with the fourth-largest forex reserves globally.\n\nThe Reserve Bank of India (RBI) utilizes these reserves to stabilize the rupee, preventing extreme fluctuations and mitigating the impact of market volatility. The RBI's efforts have been successful, as the rupee, despite being near a record low, remains relatively stable.\n\nExperts predict further growth in India's reserves, reaching $745 billion by March 2026. This increase will provide the RBI with greater leverage to manage the rupee's performance and address external risks.\n\nThe buildup in reserves is supported by a balance-of-payments surplus, aided by a narrowing current-account deficit. RBI Governor Shaktikanta Das has repeatedly emphasized the importance of maintaining a strong forex buffer to safeguard the Indian economy during volatile market conditions.\n\nWhile the Indian economy demonstrates resilience, global uncertainties, including escalating geopolitical tensions, pose potential threats to growth and inflation. The RBI is expected to proceed cautiously with its future policy decisions, closely monitoring these developments."
    },
    {
        "title": "Nagarjuna to Sue Telangana Minister Konda Surekha for Rs 100 Crore",
        "description": "Nagarjuna To Pursue Another Rs 100 Cr Lawsuit Against Konda Surekha: 'Industry Won't Be Soft Target Anymore&nbsp;&nbsp;News18Telangana Minister Now Claims KTR Is Responsible For KCR's 'Disappearance'&nbsp;&nbsp;NDTVCan’t use our names for political gains: Nagarjuna to file Rs 100 crore defamation suit against Konda Surekha&nbsp;&nbsp;Deccan HeraldLinga Bhairavi Temple, Which Samantha Ruth Prabhu Visited, Has Women Priests; Shrine Set Up By Sadhguru Exp&nbsp;&nbsp;News18‘Rahul Gandhiji please…’: Nagarjuna's wife on Telangana minister's Naga-Samantha divorce remark&nbsp;&nbsp;Hindustan...",
        "url": "https://news.google.com/rss/articles/CBMi4AFBVV95cUxQQkJya0pCUnViSmRmVG5CYjBCME9kSWZzOGVCWVdnWkFrUFplTFVLckgzbXBtdE5kbVNNMlZMd2ZMNWlDemVwajlVVmM2Qm9qOFl3ZzJoeEpoQzV6LW9LTm1ldGJGelVXOUNVTm5uU2xzeW44d2FxN0wwbm5iWmRzaS1pNHNYMXNrdnlIR1MxWndlcm1TVWRILUhmR0pUTXR2QnBRaTV5Q3QzdERyNmJxQS1VNDBaU1ZJdUNQNFRCU3VFR3pkQWRpSldJUVFZVXFYei1tT1pFMlRBclAzcnU3NdIB5gFBVV95cUxPSUdKQXh2ajhtR0V4dVFBdGFoWGo1ZmZoYlliRUZHUHR6SFhEWmNRYmswNlJGUGxTMV9mMEV1d0w4VjlfV2ZpNnRCa0ZUdVBhYzQ4cHVsN2hqdkdrQjUzOUk4RUNCcndYNFpLXzYyeE50MFNrWHdfMHVwZTRQaUgxSVd6MFZrSWktTHRaU1U3T3JBRUhyeU5jZmRqcnd3SVloWXBsZG9qM0ZSVUxncjM5cHgtT1dLZlNOaEFQWVJHT19XRW9pRG9WQ2RJU2pXTkNxRk5RNXk0OEdMekVsb285aWUtSzhSZw?oc=5",
        "published_at": "2024-10-04T15:07:18+00:00",
        "category": "entertainment",
        "news": "Telugu film star Nagarjuna is set to file another Rs 100 crore defamation suit against Telangana Minister Konda Surekha. This comes after Surekha allegedly used Nagarjuna's name and that of his ex-wife Samantha Ruth Prabhu for political gains, making comments about their divorce. \n\nNagarjuna has declared that the film industry will no longer be a soft target for such actions and will defend its members. He has specifically stated that his name and that of Samantha cannot be used for political purposes.  This latest legal battle highlights the growing tension between the film industry and some politicians in Telangana."
    },
    {
        "title": "Agra Teacher Dies After Heart Attack Following Scam Call About Daughter's Arrest",
        "description": "The caller threatened to release an inappropriate video of her daughter if she didn't pay Rs. 1 lakh. Malti then told her son about the situation, asking him to transfer the money quickly to protect her daughter from being implicated in the case.",
        "url": "https://www.businesstoday.in/latest/trends/story/agra-teacher-dies-after-heart-attack-after-scam-call-about-daughters-arrest-in-sex-racket-448808-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T14:32:16+00:00",
        "category": "business",
        "news": "A school teacher in Agra, Malti Verma, died of a heart attack after receiving a scam call claiming her daughter was arrested in a sex trafficking case.  The caller, pretending to be a police officer, threatened to release an inappropriate video of the daughter unless a ransom of Rs. 1 lakh was paid. \n\nFearing for her daughter's safety, Malti informed her son, Divyanshu, who quickly realized the call was a scam after discovering the caller's number was from Pakistan.  Despite his reassurances, Malti remained anxious and started feeling unwell after returning home from school. She was rushed to a nearby hospital, where she was pronounced dead on arrival.\n\nThe incident highlights the devastating consequences of cyber scams and the vulnerability of individuals to emotional distress caused by such fraudulent activities. The police are investigating the caller's number and the circumstances surrounding the tragedy."
    },
    {
        "title": "Fugitive Preacher Zakir Naik Sparks Outrage in Pakistan",
        "description": "Zakir Naik met with Pakistan Prime Minister Shehbaz Sharif on Thursday after arriving in the country on Monday.",
        "url": "https://www.businesstoday.in/latest/trends/story/get-girls-married-preacher-of-hate-zakir-naik-makes-shocking-outburst-at-girls-orphanage-watch-why-he-got-so-angry-448805-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T14:00:51+00:00",
        "category": "business",
        "news": "Controversial Islamic preacher Zakir Naik, wanted in India for terror-related charges, has once again generated headlines for his controversial behavior. During a recent visit to a girls' orphanage in Pakistan, Naik refused to acknowledge the girls as \"daughters,\"  citing his interpretation of Islamic principles that prohibits interaction with unrelated women. He reportedly argued that the girls, deemed of marriageable age, should be married off as soon as possible. \n\nThis incident has sparked widespread outrage in Pakistan, with social media users criticizing Naik's actions as misogynistic and harmful. The video of the incident, which shows Naik rushing off stage after the girls presented him with flowers, has gone viral.\n\nNaik is currently on a lecture tour in Pakistan following an invitation from the Pakistani government. He met with Prime Minister Shehbaz Sharif on Thursday. His visit has been met with condemnation from India, with a government spokesperson calling it \"disappointing and condemnable.\" \n\nNaik fled India in 2016 and has been living in Malaysia since.  He has been accused of promoting hate speech and inciting violence against non-Muslims."
    },
    {
        "title": "Wegovy Weight Loss: Science and Hype",
        "description": "Wegovy Weight Loss: The Science and The Hype of Supplements&nbsp;&nbsp;FrontlineOzempic is transforming your gym&nbsp;&nbsp;Financial TimesREGENCEN&nbsp;&nbsp;Harbor LightSome patients are microdosing Ozempic without medical advice: Report | NewsNation Live&nbsp;&nbsp;NewsNation NowUnapproved: Doctor advises against Ozempic for weight loss&nbsp;&nbsp;WOODTV.com",
        "url": "https://news.google.com/rss/articles/CBMirwFBVV95cUxPVm90SHVoeE81dGpGRjNIZV93Y2xHQ1E2YUpvWFBTcWMtZ1h2Q2RWc2tVYlJlVFRnbUJyVGZ3YTdLVDhvTFhKOEFqNTN5RUZDdTlPUHlqWjZSS3hKOFo4Ri0tMlZDZ2R5cS1zUXNmLUdacHlTNGVlamRoRTVfb3lFQ01PWXZVYkd0VkhmN1Z0aFJMUExZV2tyV2NrNXJsUkZ1MG1VZDJ4cDljV2dPVnh30gG2AUFVX3lxTFB5ekJVS3JjakQ3NWxwYU1FVHBHd3hIRlhubDJUN0JQRGJVWjNQdE5OUzljcjJlU2pLTXRiSkNYcW5ZRzRPQWM2R1BHYjYyalM3Q2k2MUlycEl3amgyd2ttNmUtUC1TdVZXSEN0NERORDNuRHNwdGwzWkx5elJfaGFwQUNacTNsSEk0RjdNOEZWZHZCQXp3M0s0UmNoeWxobHphYUduTC10VHFCdlNaU3FkakN5VTF3?oc=5",
        "published_at": "2024-10-04T13:42:38+00:00",
        "category": "health",
        "news": "The weight loss drug Wegovy, a brand name for semaglutide, is making headlines. While hailed as a revolutionary treatment for obesity, it's also sparking controversy. \n\n**The Science:** Wegovy works by mimicking a hormone that regulates appetite and helps users feel fuller for longer. Clinical trials show significant weight loss in patients, with many losing 15% or more of their body weight. \n\n**The Hype:** The drug's success has led to a surge in demand, creating shortages and prompting some to seek unauthorized access.  A report by NewsNation Live revealed patients self-prescribing and microdosing Ozempic, a similar drug, without medical advice. \n\n**The Caution:** Despite its effectiveness, experts warn against using Wegovy for weight loss without medical supervision. Doctors like those interviewed by WOODTV.com advise against using it solely for weight loss, emphasizing potential side effects and the importance of a holistic approach to weight management. \n\nThe future of Wegovy is uncertain. While promising, the drug's accessibility, ethical use, and long-term effects remain under scrutiny."
    },
    {
        "title": "Mumbai's Housing Market: A 1 BHK Chawl for Rs 45,000 Sparks Outrage",
        "description": "The 1BHK apartment in Matunga features a small living room, a compact bedroom, and a kitchen. It also has a small staircase leading to a loft for extra storage. The rent? Rs 45,000 per month.",
        "url": "https://www.businesstoday.in/latest/trends/story/rent-matunga-ka-hai-ya-london-ka-netizens-react-after-rs-45000-rent-for-1-bhk-chawl-in-mumbai-goes-viral-448788-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T12:57:44+00:00",
        "category": "business",
        "news": "A recent listing for a 1 BHK \"chawl\" in Matunga, Mumbai, has gone viral due to its exorbitant rent of Rs 45,000 per month. This traditional tenement housing, typically associated with lower-income families, is being marketed as a \"1BHK with old vibes\" despite its compact size, featuring a small living room, bedroom, kitchen, and loft for storage.\n\nSocial media users have expressed shock and disbelief, questioning the justification for such a high rent. Some compared it to the cost of renting in London, while others highlighted the disparity between the price and the apartment's condition. \n\nThis incident has sparked conversations about Mumbai's spiraling housing costs and the increasing unaffordability of living in the city.  Many users pointed out that similar-sized apartments in other parts of Mumbai could be rented for significantly less. The incident further underlines the growing disparity between the city's affluent and less fortunate residents."
    },
    {
        "title": "India's Capex Revival: Housing and Power Lead the Charge",
        "description": "Revival in housing construction, power generation would drive India’s capex in the next few years, new investment areas to do their bit in adding to growth, said Axis Capital report.",
        "url": "https://www.businesstoday.in/latest/economy/story/india-on-cusp-on-capex-revival-housing-power-sectors-to-drive-capital-formation-report-448737-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T10:37:57+00:00",
        "category": "business",
        "news": "India's capital expenditure (capex) is poised for a revival in the coming years, with the housing and power sectors leading the charge, according to a recent report by Axis Capital.\n\nThe report highlights that while housing construction has struggled in recent years, it's expected to be a key driver of capex growth. Similarly, power generation, which saw a slowdown in investment activity between 2012 and 2021 due to overcapacity, is expected to rebound. \n\nNew investment areas like green hydrogen, defense, solar modules, robotics, data centers, and energy storage are also expected to contribute to the growth in capital formation.\n\nThe report, however, acknowledges challenges to capex revival, including weaker global demand, slower foreign capital inflow, and the near-term slowdown due to unintended monetary and fiscal tightening.\n\nDespite these challenges, Axis Capital expects India's investment ratio to rebound to 34% by FY30, driven by increased investment in these key sectors. The report also recommends specific stocks that are likely to benefit from the capex revival, with L&T, Adani Ports, ABB, Container Corporation, Craftsman Auto, CESC, and Hindalco listed as top \"Buy\" recommendations."
    },
    {
        "title": "Nissan Magnite Facelift: A Refreshed Compact SUV for 2024",
        "description": "Nissan Magnite Facelift 2024 Launch LIVE: निसान मैग्नाइट फेसलिफ्ट हुई लॉन्च; कीमत, फीचर्स, स्पेक्स समेत जानिए पूरी जानकारी&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)निसान मैग्नाइट फ़ेसलिफ़्ट लॉन्च से ठीक पहले हुआ लीक; देखें कैसा है नया लुक!&nbsp;&nbsp;CarWale Hindiखतरनाक डिजाइन वाली Nissan...",
        "url": "https://news.google.com/rss/articles/CBMi4gFBVV95cUxOOHRtNTZnZzdJbWdWOC1CcE5yREctT2w0a1BINFpRYjRZdXlVWVRHSjk3TGxCODJWSFQyU19zbURVaXNVTEVfc2RsRmpPX0t5c24tRGY1N19BU2FIbFJjNk9fZDlkc2VYS2tTeW5iUGZrcjdlS3BlUmZjcFFTNUpydEwxOFF0VXp1cXNYRjc3cFVVeXRFMFBydjA4YmtvS0pHMWhuOE9QNWptVHhSZkE2ZEU5N2NfZGFOV2I4dEFNWTkzLUFuQWJZdWF4aV9LSF9hbk1lSjFtbGNpNlZEeUlUZjhR?oc=5",
        "published_at": "2024-10-04T09:11:30+00:00",
        "category": "business",
        "news": "Nissan has officially launched the 2024 Magnite facelift. While details are limited, early information suggests a refreshed design and possibly upgraded features. \n\nThe new model features a more aggressive front fascia, hinting at a sportier aesthetic.  Further details on interior features, engine specifications, and pricing are yet to be released. \n\nThis update comes after recent leaks showcasing the new exterior design. \n\nStay tuned for more information on the 2024 Nissan Magnite facelift as it becomes available."
    },
    {
        "title": "The Mystery of Zyber 365: India's \"Fastest Unicorn\" Under Scrutiny",
        "description": "The founder, Pearl Kapur, had claimed the start-up is a Unicorn, based on a $100 million fund-raise from a London-based investor. That investor had also announced an investment in SpiceXpress, but it turns out that it never materialised",
        "url": "https://www.businesstoday.in/latest/corporate/story/the-mystery-of-pearl-kapur-and-zyber-365-indias-fastest-unicorn-448661-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T06:01:11+00:00",
        "category": "business",
        "news": "Zyber 365, a Web 3.0 AI company founded by Pearl Kapur,  claimed \"unicorn\" status in July 2023, based on a purported $100 million Series A funding round led by the London-based SRAM & MRAM Group. This would have valued the company at $1.2 billion, making it the \"fastest unicorn\" in India. \n\nHowever,  investigations by Business Today have raised serious questions about the validity of these claims. \n\n**Red Flags:**\n\n* **Lack of Financial Transparency:**  Zyber 365 has not filed any financial reports with the Ministry of Corporate Affairs since its incorporation. \n* **Unfulfilled Promises:** Despite announcing a $100 million investment in SpiceXpress (the cargo division of SpiceJet), SRAM & MRAM Group has not delivered on this promise, as confirmed by SpiceJet.\n* **Conflicting Information:** The company's website lists its global headquarters in London, while its Indian subsidiary is registered at a residential address in Punjab. Furthermore, co-founder Sunny Vaghela has resigned, claiming no progress on the company's plans and lack of involvement since inception. \n* **Missing Responses:** Both Kapur and SRAM & MRAM Group have not responded to Business Today's inquiries. \n\nThe lack of transparency and unfulfilled promises cast doubt on Zyber 365's self-proclaimed unicorn status. It is crucial for investors and the public to exercise caution and demand concrete evidence before accepting such claims."
    },
    {
        "title": "India's Living Standards Poised for Steepest Rise in Upcoming Decades: Sitharaman",
        "description": "Finance minister Nirmala Sitharaman stated in her address that India is seeking to double its per capita income in a matter of a few years for its population of 1.4 billion people.",
        "url": "https://www.businesstoday.in/latest/economy/story/period-defining-upcoming-decades-will-see-steepest-rise-in-living-standards-says-fm-sitharaman-448659-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T05:40:48+00:00",
        "category": "business",
        "news": "Finance Minister Nirmala Sitharaman has predicted a dramatic increase in India's living standards in the coming decades, labeling it a “period-defining” era. The minister, speaking at the Kautilya Economic Conclave,  highlighted India's ambitious goal of doubling its per capita income within a few years. \n\nSitharaman attributed this projected rise to several factors, including:\n\n* **Declining Inequality:** The Gini coefficient, a measure of income inequality, has been steadily decreasing in both rural and urban India, indicating a more equitable distribution of wealth.\n* **Structural Reforms:**  The effects of economic and structural reforms implemented over the past decade are now becoming more apparent in data, driving positive growth.\n* **Post-Pandemic Recovery:** The impact of the COVID-19 pandemic is gradually fading from the economy, paving the way for a robust recovery.\n\nDespite these positive indicators, Sitharaman acknowledged potential challenges, including:\n\n* **Global Conflicts:** The escalation of international conflicts poses a threat to global peace and economic stability.\n* **Technological Disruption:** The rapid advancement of technology could have a profound impact on labor markets, particularly for India's large young population.\n\nHowever, Sitharaman expressed optimism about India's future, emphasizing the potential for:\n\n* **Increased Consumption:** A growing young population and rising middle class will fuel robust consumer spending. \n* **Foreign Investment:** A vibrant marketplace and improving economic fundamentals will attract significant foreign investment.\n\nSitharaman's pronouncements suggest a bright future for India's economy, characterized by rising living standards, reduced inequality, and a burgeoning consumer market.  However, the government will need to navigate potential challenges posed by global uncertainty and technological disruption to fully realize these aspirations."
    },
    {
        "title": "India's Economy: A 20-Year Sweet Spot with a Cautionary Tale",
        "description": "Indian economy is set for a positive trajectory over the next 20 years due to favorable demographics. However, investors should remain vigilant against overpricing and external financial influences, particularly from China and global liquidity flows. Learning from past complacency, strategic timing and careful investment will be crucial for sustained growth.",
        "url": "https://economictimes.indiatimes.com/markets/expert-view/indian-economy-in-sweet-spot-for-next-20-years-but-learns-lessons-from-recent-market-crash-anurag-singh/articleshow/113926977.cms",
        "published_at": "2024-10-04T05:15:52+00:00",
        "category": "business",
        "news": "**Anurag Singh, Managing Partner of Ansid Capital, predicts a bright future for the Indian economy, citing favorable demographics that will sustain growth for the next two decades.** While India's economic potential is undeniable, Singh urges investors to learn from recent market crashes and avoid complacency. \n\n**Singh warns of the risks associated with overpricing and external financial influences, particularly from China and global liquidity flows.** He highlights the recent surge in the Chinese market fueled by government-backed buybacks, which could potentially draw away investment from India. \n\n**While advocating for long-term investment, Singh emphasizes the importance of strategic timing and careful investment decisions.** He suggests that the days of \"secular buying\" are over, and investors must actively manage their portfolios in light of volatile global markets.\n\n**The key takeaway is that India's economic future is promising, but investors should remain vigilant and exercise caution in navigating the complexities of a globalized market.** Learning from past mistakes and adopting a proactive approach will be crucial for maximizing returns and ensuring sustained growth."
    },
    {
        "title": "Wealth Isn't the Issue, It's How It's Used: RPG's Harsh Goenka Responds to Nithin Kamath",
        "description": "Kamath had said that India's socialist roots still heavily influence its attitudes toward wealth, even as the country grows economically. “We are all socialists,” he added.",
        "url": "https://www.businesstoday.in/latest/corporate/story/wealth-isnt-the-issue-rpgs-harsh-goenka-responds-to-nithin-kamaths-take-on-why-indians-hate-the-rich-448645-2024-10-04?utm_source=rssfeed",
        "published_at": "2024-10-04T04:02:19+00:00",
        "category": "business",
        "news": "Harsh Goenka, Chairman of RPG Enterprises, has challenged Zerodha CEO Nithin Kamath's recent observation that Indians often resent the wealthy. Kamath, speaking at TechSparks 2024, attributed this resentment to India's deeply ingrained socialist mindset, which, according to him, persists despite the country's economic growth.\n\nGoenka, however, argues that it's not wealth itself that Indians dislike, but rather the way it's used. He highlights the admiration and respect Indians have for billionaires like Ratan Tata, Azim Premji, and Anand Mahindra, who are lauded for their humility, philanthropy, and ethical values. Goenka emphasizes that it's the flaunting of wealth, corruption, and prioritization of personal gain over societal good that creates resentment. \n\nThis exchange has sparked a broader conversation online, with some users reflecting on India's cultural values and the contrasting attitudes toward wealth in different parts of the country. Kamath acknowledged the persistence of wealth inequality as a contributing factor to this mindset."
    },
    {
        "title": "Telangana Minister Faces Backlash for Comments on Naga Chaitanya-Samantha Divorce",
        "description": "After Big Claim On Naga-Samantha Divorce, Konda Surekha Says No One Knows Why They Parted Ways&nbsp;&nbsp;News18\"Defamed My Son\": Nagarjuna Files Complaint Against Telangana Minister&nbsp;&nbsp;NDTVCongress minister in legal soup over Naga-Sam divorce remark - The controversy explained&nbsp;&nbsp;The Times of IndiaActor Rakul Preet slams Telangana minister: Don't use my name to grab headlines&nbsp;&nbsp;India TodayTelugu film industry unites to condemn Konda Surekha's remarks on Akkineni family, Nagarjuna lodges defamation case&nbsp;&nbsp;Deccan Herald",
        "url": "https://news.google.com/rss/articles/CBMiuwFBVV95cUxQdHR5U21FdDhqcmJaMWtUYTNmUVYwWmZOa2Jmc3FTdlNhZEJ5djhCaHhPNlUxRjZuMURDdHZWdlJldjVvLW1jS1FUV3NYZGlGckpUdkRMSGIzT05aQzdzLXdYNUw4ZnRFZHlTNUhRMXEwSEp2RXRtT0psYTdrVVBIWFZOOGVIeFpnTk1WRURFT2pTS21uUzNSX19ZTnVDSnJ3SVFHbXczM2kzY0pZZXN5UlMxS29uOVBNa1U4?oc=5",
        "published_at": "2024-10-03T16:16:35+00:00",
        "category": "entertainment",
        "news": "Telangana Minister Konda Surekha has sparked controversy after making claims about the reasons behind the divorce of Telugu actors Naga Chaitanya and Samantha Ruth Prabhu. While she did not specify her claims, they were widely perceived as unfounded and harmful. \n\nThis has led to several consequences:\n\n* **Nagarjuna, Chaitanya's father, has filed a defamation case against Surekha.** He accused her of defaming his son and the Akkineni family. \n* **Other actors and industry professionals have condemned Surekha's remarks.** The Telugu film industry has come together to express their disapproval, highlighting the need for responsible public discourse. \n* **Actor Rakul Preet Singh has also expressed her displeasure.** She has urged politicians to refrain from using her name to grab headlines, highlighting the potential harm of such actions.\n\nWhile Surekha has since clarified that she did not intend to cause any harm, the damage has been done. This incident raises serious questions about the need for responsible public discourse and the potential consequences of spreading unsubstantiated claims."
    },
    {
        "title": "Arfeen Khan: From Bigg Boss to Politics and Debt",
        "description": "Arfeen Khan Latest News, Updates in Hindi | अरफीन खान के समाचार और अपडेट&nbsp;&nbsp;Aaj Takबिग बॉस-18: शिल्पा शिरोडकर से चाहत पांडे तक: कोई कर्ज में डूबा तो किसी ने राजनीति में आजमाई किस्‍मत; जानें ...&nbsp;&nbsp;Dainik Bhaskar'बिग बॉस 18...",
        "url": "https://news.google.com/rss/articles/CBMiUEFVX3lxTFBKVGt0VW0zVDFjNk8tX0dydDhLdTN2eHRXbTBLZUd6RmVrc1ZFT2JncmpHdlMydFRaWVRKTUxaNWNUMHcyU0hzRTZ6Um9qWFJK?oc=5",
        "published_at": "2024-10-03T13:30:25+00:00",
        "category": "entertainment",
        "news": "Former Bigg Boss contestant Arfeen Khan has been making headlines recently, with news surfacing about his current endeavors.  While his Bigg Boss journey is well-known, Arfeen has now ventured into the world of politics, though his path has been marked by financial struggles. \n\nSources indicate that Arfeen, along with other former contestants like Shilpa Shrodkar and Chahat Pandey, have faced financial hardship. This news follows reports of Arfeen's foray into politics,  suggesting that his current challenges have led him to explore new avenues. \n\nThis development has raised questions about the realities of fame and the subsequent challenges faced by reality TV participants.  Arfeen Khan's story serves as a reminder of the often-difficult transition from the spotlight back to everyday life."
    },
    {
        "title": "Cricket Star Mushtaq Ahmed's Car Accident Highlights Importance of Safety Features",
        "description": "जरूरत की खबर- क्रिकेटर मुशीर खान का कार एक्सीडेंट: क्या 5 स्टार रेटिंग है सेफ, कैसे देखें सेफ्टी-रेटिंग, का...&nbsp;&nbsp;Dainik BhaskarVolvo Safety Features: वोल्वो के वो 5 सेफ्टी फीचर्स, जो बच्चों से लेकर बड़ों को भी देंगे सुरक्षा&nbsp;&nbsp;ABP...",
        "url": "https://news.google.com/rss/articles/CBMiwgFBVV95cUxObjN2U21sdmNOMzRlUElXd0p0MjhFNml6R1FnVE94MExpekp4eE94TTJERl9WUXN1bzBxXzA5NThkcWNVb2NmM3psckptRU9ZeTZFaXRadHBwaGpsWE02dVREZmJ3bWw1REtuc0lRX2t3enE3MzJ3VFpBVHpzWmN0RWVURFhqRnBYczJ3QzBxN09PZUZrcXBEQmI1My1TNGpqNVRvb0kzZUkwRmNuMDNwWE5Pb0d1Y01mZzd3bVdycEVHZ9IBxwFBVV95cUxQaWdEUDhvOVJGQ3dPUGJQbHhvWkQ5c25BU1I4LWhTR3NVd2dZWjY2M3c5NGdFWDRENG8tMnNLV3ZSQ1JETmpQVTJMaEVMdkIwTGZPSW1jTEJYakFpVEYzZDVaelBjbVFxSU4wSThiMmJqNlFkTzZEYVZ1VHpSa0R6MHpmaERtek5hWFJVMld0LTZFLTB5WkxUMHF0b2RuNjZaMXBVbER5cDVMaUh4bFRkd0ZiNHpabDhBdnN0dzd3UENVMTRYTW9B?oc=5",
        "published_at": "2024-10-03T13:21:11+00:00",
        "category": "business",
        "news": "Following a recent car accident involving Pakistani cricketer Mushtaq Ahmed, questions have arisen regarding the safety of the vehicle and its safety rating. The accident underscores the importance of researching and understanding car safety features before purchasing a vehicle. \n\n**How to Check Safety Ratings:**\n\n* **Global NCAP:**  This independent organization provides safety ratings for vehicles sold worldwide, including India. Their website provides a detailed breakdown of crash test results and safety features.\n* **Euro NCAP:**  Another reputable organization that conducts crash tests and assigns safety ratings for cars sold in Europe. Their website includes comprehensive information on individual models.\n\n**Safety Features to Consider:**\n\nWhile a high safety rating is crucial, it's equally important to understand the specific safety features offered by a vehicle. Some key features to prioritize include:\n\n* **Airbags:** The number and placement of airbags are essential for protecting passengers in a crash.\n* **Anti-lock Braking System (ABS):** Prevents wheels from locking during braking, improving control and potentially avoiding collisions.\n* **Electronic Stability Control (ESC):** Helps maintain vehicle control during challenging maneuvers, reducing the risk of skidding or rollovers.\n* **Lane Departure Warning System:** Alerts drivers when their vehicle drifts out of its lane, potentially preventing accidents.\n* **Autonomous Emergency Braking (AEB):**  Uses sensors to detect obstacles and automatically applies brakes to avoid or mitigate collisions.\n\nBy researching safety ratings and understanding the features offered, consumers can make informed decisions and prioritize their safety on the road."
    },
    {
        "title": "Ratan Tata Cashes Out of Upstox With 23,000% Return",
        "description": "The Ratan Tata and Tiger Global-backed digital investment and trading platform said Tata’s stake in Upstox has registered a whopping 23,000% return on the original investment made in 2016, based on its last round valuation of $3.5 billion.",
        "url": "https://www.businesstoday.in/latest/corporate/story/ratan-tata-sells-stake-in-upstox-after-earning-23000-return-448593-2024-10-03?utm_source=rssfeed",
        "published_at": "2024-10-03T12:50:28+00:00",
        "category": "business",
        "news": "Indian business tycoon Ratan Tata has sold a 5% stake in the digital investment platform Upstox, realizing a staggering 23,000% return on his initial investment. Tata, who first invested in the company in 2016, now holds a stake worth $46.5 million, a significant increase from his initial investment of $200,000. \n\nUpstox, valued at $3.5 billion, has seen rapid growth since its inception. The company credits Tata’s early investment and his vision for inspiring the development of Upstox Wealth, a platform designed to provide financial advice and tools for all Indians. The platform offers a wide range of financial products, including stocks, IPOs, F&O, commodities, currencies, and insurance. \n\nIn the last fiscal year, Upstox achieved an impressive EBITDA of Rs 200 crore and a consolidated net profit of Rs 25 crore.  The company is also expanding its services to include insurance distribution, further strengthening its position as a comprehensive wealth management platform."
    },
    {
        "title": "Indian Managers & Sick Leave: A Reddit Story of Nosiness and Humiliation",
        "description": "On Reddit, one user, under the handle \"pranagrapher,\" sparked a conversation in the \"Indiasocial\" community, asking fellow Indians to share stories about their managers’ responses when they took sick days. The replies poured in, revealing a mix of both heartbreaking and humorous encounters",
        "url": "https://www.businesstoday.in/latest/trends/story/tried-to-check-if-i-had-menstrual-redditors-share-stories-of-nosy-indian-managers-over-sick-leaves-448558-2024-10-03?utm_source=rssfeed",
        "published_at": "2024-10-03T09:53:36+00:00",
        "category": "business",
        "news": "A recent Reddit thread in the \"Indiasocial\" community has sparked a conversation about the often intrusive and insensitive responses Indian managers have towards employees taking sick leave. The thread, started by user \"pranagrapher,\" has garnered over 5,700 votes and numerous comments sharing personal experiences. \n\nThe stories range from the humorous to the heartbreaking. One user recounted their mentor attempting to confirm if they were experiencing menstrual pain. Another user shared a story about a colleague being asked to postpone her menstrual leave due to a workload backlog. \n\nThese anecdotes highlight a disturbing pattern of managerial behavior, often bordering on disbelief and even accusations of faking illness. Some users reported being asked to provide medical documents or even being pressured to utilize their sick leave before it expired, regardless of their actual health status. \n\nThis thread raises concerns about the lack of empathy and understanding towards employee well-being within some Indian workplaces.  It serves as a stark reminder of the importance of fostering a culture that prioritizes employee health and respects their need for time off when sick."
    },
    {
        "title": "Google's Gemini AI Voice Feature Now Free for All Android Users",
        "description": "Google’s Gemini AI Voice Feature Now Available For Free To Android Users: What It Is And How It Works&nbsp;&nbsp;News18Google rolls out Gemini Live voice chat feature to all Android users: How to use&nbsp;&nbsp;Business TodayGoogle brings Pixel 9’s Gemini AI features to all Android phones: All the details&nbsp;&nbsp;MoneycontrolGoogle rolls out Gemini Live with 10 new voices for free users on Android: Technology news&nbsp;&nbsp;Business StandardThis Google Pixel 9 Gemini AI feature is now available for all Android users for free&nbsp;&nbsp;The Times of India",
        "url": "https://news.google.com/rss/articles/CBMi1wFBVV95cUxQRm5qbE44SVpEcEV5aWpTVjZDUDlFbkxLVXhkZFRBc0JfeWxiMWxPU05DQjI4OEx6alhHX19udV9LS3ZEOEh2bVNVZ1V0UWFGcW43ZFpkUmh3SUd6UlpESmY5TUVacEdTMDRNWjRhWkktYlNSVU5LSFV5Nm1iV3VfaTh3YnNYRGFQWXRfOHJ4clZxRG5PN0hIRzE4TTRQWjdtNU16VjRQbDM1X1NrY05SeXpjejhFaXVPLWx3RTM2NWRrNmlzWXN1RWt4S2NQazlwN1B1R0tBUdIB3AFBVV95cUxQb1BEdDJQME5KRGF5djdrSURDR3QtVm1rakNPU0pGYXk1azhadVNjQU5pcFRGa195andfSzB3ZERLVW5xRlJUX0J5YzA1M1I4SmNST20zaWVZUllFU0VZMnBIUnJ3Ul91SU9NdjN5MUxlM0Q2V2Y5Zk14TnNlaG9YQS1JbDFfUlZudlZVNXhQcjM5UUtTLTRzU253OU1ULVBCcEdndVVrRm1SaUh0S1FqLXlpcG95WHpmV2NQRlYyeFFPcGw0QXRMckFnOEc1Vk9WZjA1RVVnaGRPZmNC?oc=5",
        "published_at": "2024-10-03T09:36:04+00:00",
        "category": "technology",
        "news": "Google has made its Gemini AI voice feature available for free to all Android users. This feature, previously exclusive to the Pixel 9, allows users to engage in natural-sounding voice conversations with AI.  \n\nGemini AI can be used for various purposes, including:\n\n* **Generating text**: From writing emails and stories to summarizing articles, Gemini can assist with various writing tasks.\n* **Answering questions**:  Get information on any topic by simply asking Gemini.\n* **Translating languages**: Translate text or speech in real-time. \n* **Creating content**: Generate ideas, outlines, or even full drafts for creative projects.\n\nThe feature is accessible through the Google app, with 10 new voices for free users. To access Gemini AI, simply open the Google app and tap the microphone icon."
    },
    {
        "title": "Electric Vehicle Sales Surge 25% in Six Months, But E-Car Growth Lags: Dainik Bhaskar",
        "description": "6 महीने में इलेक्ट्रिक व्हीकल्स की बिक्री 25% बढ़ी: कुल 8 लाख वाहन बिके, ई-कारों में 1.3% की ही बढ़ोतरी हुई&nbsp;&nbsp;Dainik Bhaskarत्योहारी सीजन से पहले भारत में दोपहिया वाहनों की बिक्री में तेजी; विशेषज्ञ ने कहा- अक्टूबर में होगी असली परीक्षा&nbsp;&nbsp...",
        "url": "https://news.google.com/rss/articles/CBMi3wFBVV95cUxOOEpCdUFTX2k1ekMyN3ZQd3hHUWUyZVg1dXlvUTFoVldnY1dncHgwUm1fbm9ncEV2VWdYMjNabVVIeGlVNC1ESWgyRnBFLWNzNllxVENPRnBtTXN1cEhGMXBIYmEwWmNOdzNURzJpVnBEZzZ4NDl3eEtfRzFhYUVhWTdFVkp1aDJFTUxhMWFzMElwODVFZ0xiZElPWmhOZ1RGOGF4X2UxUjNqenJqaC1CQzBnTzgwaGl6YmVIUE9XVUd1VllmWWpwSUNXa19JUktmcnRmSjRSRHBTajlRcDZB0gHkAUFVX3lxTFBNd2s1ZnR6d1M3bjdFeUpIdU5ySzd2WE1rR0pfNEl2UmRIb01hLTlmeFdkS3ZJemJWOURfem94MTB3dGpYSGxqbHVGdEdha3ozZUZXSWNNekNUYU9ELUZIamlqV0FpUG5uUGc1RnNtVGFSN3NuZ1AxTGZkcTd0ejNKUFFtSnUwd29nM255cGxqeFowY08za3hGVDBYTWcxVEtkckFWRzFrbnFjY0ExSVgydFdkTTFNMXRtWG1oV21aTjdFVUxhQm1jOGd4Y3NHeE9jamQweFF4bDdaOGtNWlZKa2F3Sw?oc=5",
        "published_at": "2024-10-03T07:57:33+00:00",
        "category": "business",
        "news": "India's electric vehicle market saw a significant boost in the first half of the year, with sales increasing by 25% compared to the same period last year. This resulted in a total of 800,000 electric vehicles sold. However, the growth in electric car sales lagged behind, registering only a 1.3% increase. The report suggests that the surge in overall electric vehicle sales is primarily driven by the strong demand for two-wheelers.  Experts anticipate a true test of the market's performance in October, coinciding with the upcoming festive season."
    },
    {
        "title": "\"Gandi Baat\" Fame Actress Anveshi Jain Faced Criticism for Her Body, Says Brother Called Her \"Talentless\"",
        "description": "भाई ने कहा था 'तुम टैलेंट नहीं अपनी बॉडी के कारण फेमस हो': 'गंदी बात' फेम ऐक्ट्रेस अन्वेषी जैन | 'लोग पिता से कहते थे कि देखिए बेटी क्या गुल खिला रही है' | Inshorts&nbsp;&nbsp;Inshorts Hindi...",
        "url": "https://news.google.com/rss/articles/CBMingVBVV95cUxNWWpZbVlKT0xBQ2tKdVlfU0h2T2dzdnhHd25RalNSckd5MVNGbmY1RGUydXhHUGZCWHlHS2hrdHdKd2FPU2tCWkdESU1WNks4UFZxdnVVZWw5OWR3UGFsbU55MVJWZDNjajc1b2dwSFNNNElaWDlqajZxTFVXSmJmU0RiYUFIMzdiRW1ybzQ5Z2JkdUdkTjF4SGxaV0J5azdsSUdtcmNRUXhDYlFTd3dWM2dOMmxBRlJGYnlCV05zOU9sZERpbzM4WWlQU0FTeGZub2ZvUFV0STZVNjlvMGwtRG03dFJvZmVNYmNjMHdVWEdOVHN1ZlhxWmdGbTJJYVhFeGRKZEU5T2J6RVNQdkU2eGlwb2lUcVBtemsySXh4WWxxc0JRNThGRlp3Zk1OTzRFZkpUZW9ybmxNVkZnRW93MUJmTDI1Mmo3V09YZERUbXV1eFIzUFNMSmxHcXhLZmt6TG5qajRWamJVOURlS3hVX3Zjd290VFVKdkZULUcxcVlVaXlUd2VGWDlhXzlqYk5yWDZZRFJUejY1ZlhqUWptTElpSHY2V1JBV2RGem1ibmt0YXBKTHE1SndEb3ROMDRTUHNXajI2SEkwSC02RzRrMzNvQVBQQV9xVlJHU2NtN3RjZFNXZFRkRnFMSkFvVEhtV183cDRrVmhGd2hUc2FySGlvT3gzRjlDZmV3U2hZU1kzOU1lQ1hyRDI3TzA3ekVSS19Cak9xY2Nqc1Bnd2ZId2pYX09sMWZOQ0lQa2s5eHRXOGp1ZzlPVmR4TXI3cHh6SlBaT2tFbGJmajhBUkk2Y0lIVURGRlM3SnNXTWUyT2trUlpnUkg4d01WbGRZN0FfdEkwUTZubmk0ZllZTE55SVZFNTBSRnJQV0ZpbVBB0gGjBUFVX3lxTE5kSGZCcGlBM2Z6aldlaGM0TGc2N21uVER2TG9aeW9vdVU4MW9MckVMcWJCallBZmtkUE1iNWF1cnBtRHJzZnRvb1JFSS0ya01Ya0QxMXdhbTlqdmZGTDRYV3QwakVGSmtYZzZEdkVCcHJzbkhiSS1FcnVmWkNNZWY2T0hENUE0VGhSb0xBMGt0YmRicTNTZ0ZzTVZPRUNpZ2otS29TY3R2Q2pxWDJKa0NSVmpCMWFXc3ZJQ3JHRVI0OXZHdzVaR01FVzF6NGRPczJYN0R2Wko1RU5KSUJTcm9uSDgtQmxtcnVjckN1UGdVTm5Pa0pndS13OTVDRGkxUEhtRTlXb2FSb1RiY1RxM3ZEZzNGcUhnQ3Y5ZFdfM1BnTlNsQlI4VGFTM21yS2dreTd1Q0JGZzVMMnRCMUlzU3lFd2lBeGFXQzJRWEVLWVpNbVFkNzhxekxGV3VnSmpHaTAtV3lnaFRNQVlUQkxDUC1LZE9nVGN5X1JPcEVMalpMMEZCOExDbWlacUJyMkF6UmEyUWVOR3JhejlvcmVINVNGbzVXRUFHRk9iaWRfd3o1WWtjZDRNMnFhQWUtVDlTUzJzVHJRRk1iNXRfU2dCdjFYOGJOejV0azRJMzlwaWlrZHlxbl9DcGwycHFuS1QzR2ViWjF5Mlk2dVRMdXJoaXNoRXBYazlnSkJkLUxFYzdqYWFRT09SODJUcTQwaWtHZDRTOXU3T0VkekF2N3hjY1c3WXVucGhwcEtWOFFSb2ZaM09XV3hQNXlzZm5FcWlGaENUZFhGV2Y4Rk1oQzZMVXVzRHFFVGZWV2VvWTRwVUFCT1hjT21XN3RyNUN3eEM1TUNfUkYycmUza2dxazFVdEZ0dXRDUTJWLTRIWWprUVRmUGp5RQ?oc=5",
        "published_at": "2024-10-03T06:40:36+00:00",
        "category": "entertainment",
        "news": "Anveshi Jain, known for her role in the controversial web series \"Gandi Baat,\" recently opened up about the criticism she faced for her physique. In an interview, she revealed that her brother had even told her, \"You're famous for your body, not your talent.\"  \n\nJain also shared that people would often make inappropriate remarks to her father, saying things like \"Look at what your daughter is doing.\" This highlights the pervasive societal pressure and judgment women often face, especially when their success is attributed to their physical appearance."
    },
    {
        "title": "Tripti Dimri's Tears on the \"Laila Majnu\" Set: The Pressure of Being a Newcomer",
        "description": "'लैला मजून' के सेट पर हर रोज रोती थीं Tripti Dimri, इस बात की टेंशन लेती थीं VVKWWV एक्ट्रेस&nbsp;&nbsp;दैनिक जागरण (Dainik Jagran)कभी भीड़ में नहीं पहचानते थे लोग, लीड रोल निभा भी थीं गुमनाम, 10 मिनट के रोल ने बना दिया स्टार, अब हैं परेश...&nbsp;&nbsp;News18 हिंदीTriptii Dimri...",
        "url": "https://news.google.com/rss/articles/CBMiiwJBVV95cUxOMFE1bHR0aHZndDE3OU5kNHd6azVfNllqUTFnYXRiMUl0N2M1TFpJRHFvSXR4ZXJLRWNKZzNETG03MGRENmhPcW5LNWpSVnRhSEZsZ3lLZmlFcGgxNS1NZE0tNldlUjdFbTZUOTgxR25lR0xuX3gzaUFKYlpOdFFfaWJzQkNIME82SUJ1bnNUZFN0c2Vqc25hRkJ4T3JhRDBVWFRvZTRqdWZ0bVF2RHhMXzBmQ19JM2U1M29yQTg4SF9kRWd2aGYwZDNzXzV0bTBkZTFaenRyZGRUNGhUVEF4YmZOc09tQV9NcWNxZjZFdHc3eTNBSXlsbUlGZ3AtdWZyWl90VllKbU9oOXc?oc=5",
        "published_at": "2024-10-03T05:06:00+00:00",
        "category": "entertainment",
        "news": "Tripti Dimri, the actress known for her breakout role in \"Laila Majnu,\" has revealed the emotional challenges she faced during filming. Despite starring in the lead role, Dimri felt the weight of expectations and the pressure of proving herself as a newcomer. She shared that she would often cry on set due to the immense pressure and uncertainty of her career path. This experience highlights the often unseen struggles of young actors navigating the competitive world of Bollywood."
    },
    {
        "title": "Bharat Forge Subsidiary to Produce Howitzers for Global Markets",
        "description": "Kalyani Strategic Systems to sign pacts with two US companies for manufacture of 105-mm and 155-mm howitzers.",
        "url": "https://www.businesstoday.in/latest/corporate/story/bharat-forge-subsidiary-to-sign-pact-to-make-105-mm-155-mm-howitzers-448495-2024-10-03?utm_source=rssfeed",
        "published_at": "2024-10-03T04:36:28+00:00",
        "category": "business",
        "news": "Kalyani Strategic Systems, a subsidiary of Bharat Forge, has announced a partnership with two US companies, AM General and Mandus Group, to manufacture 105-mm and 155-mm howitzers. These next-generation artillery systems are designed to meet the demands of modern warfare, offering enhanced firepower, precision strikes, and improved mobility.\n\nThe collaboration aims to develop and produce compact, robust, and lightweight artillery platforms, providing armies with all-weather and all-terrain capabilities.  These advanced systems will incorporate disruptive technology, ensuring responsiveness, survivability, and increased lethality, while minimizing logistics requirements. \n\nThe partnership reflects the growing global demand for modern light artillery systems, particularly in response to the evolving combat scenarios seen in near-peer conflicts."
    },
    {
        "title": "Raghuram Rajan Warns Against Ignoring Food Inflation in India",
        "description": "Food prices are a major factor in India’s inflation dynamics, with nearly half of the Consumer Price Index (CPI) basket dedicated to food.",
        "url": "https://www.businesstoday.in/latest/economy/story/if-you-leave-out-raghuram-rajan-has-a-cautionary-note-for-shaktikanta-das-and-co-448463-2024-10-02?utm_source=rssfeed",
        "published_at": "2024-10-02T13:06:10+00:00",
        "category": "business",
        "news": "Former RBI governor Raghuram Rajan has cautioned the central bank against excluding food prices from inflation calculations, arguing that doing so could erode public trust in the bank's ability to manage the economy. \n\nRajan's concerns stem from the significant impact of food prices on India's inflation dynamics. With nearly half of the Consumer Price Index (CPI) basket dedicated to food, high food inflation directly affects household spending and public perception of economic stability. \n\nDespite calls to recalibrate the CPI, Rajan maintains that food inflation cannot be ignored. He argues that while the central bank may not be able to influence short-term fluctuations, sustained high food prices indicate deeper structural issues that require attention.\n\nRajan's warning comes as a government panel considers reducing the weight of food in the CPI basket. While economists argue that the current basket no longer reflects modern consumption habits, Rajan and RBI Governor Shaktikanta Das have both voiced concerns over sidelining food inflation, highlighting its impact on public perception of inflation."
    },
    {
        "title": "Stem Cell Transplant Shows Promise for Type 1 Diabetes Cure, But More Research Needed",
        "description": "Cure Within Reach But More Studies Needed: Indian Experts on World’s First Stem Cell Reversal of Type 1 Dia&nbsp;&nbsp;News18Chinese scientists make history by reversing woman’s Type 1 diabetes: ‘I can eat sugar now’&nbsp;&nbsp;The Indian ExpressIn groundbreaking, world-first achievement, Type 1 diabetes cured in China using stem cell transplant, rep&nbsp;&nbsp;The Economic TimesChinese scientists see sweet success, reverse type-1 diabetes in woman using her own stem cells&nbsp;&nbsp;ThePrint",
        "url": "https://news.google.com/rss/articles/CBMi8wFBVV95cUxONWg0TF9Ma3VZU1kxai1Zek5BczBpa0t2RmFtSnRqb0pnbW0xc0lKY0t0bXE3cGNzMGx6LU5GRnRxWk5EQU1PYkRWQW1OaUV5bTZCZjZoYUxVVE5GYXVsQmNpVnd1OWk1RGlNTExnVFhKbkpiQW16Rk5SQlgxQnc0eGZBZ25jQkdBUHJCWV9GZkpBNzFUenlueGxtU3ZXNkYxaUJ2UDc1LS1yVnNCWDlxWGQzRHBKRWxuclBBeERLRmxBcVpvRGNXMFpRV2IzMG9KdGFtd1lBU25tMGVzX1Jlb2pKaF9XeDlDRzJjRGwwM2hBbm_SAfgBQVVfeXFMTmIwNGFJN0ZSUzNYM29RLVJMN3BhdUh1YVFSYlAxLXZ1STFRcnFyaU91LW9OZHAwQXYyR0xxY1lQb25IaFYtMDRkc3dhU1JKT21qWUNack5ZeE1kV1dwMS1JZ2x5bll5ckFOcFRGenBINmw2WnMzNHhKZE45SUREQXlPblEtWGpDUzRMUVNEYzRJLXZ2TmJRVVpfcGpvVk4yQ2dvRFJNUnVyd0N1Wk9nSExiZmxHelRiNVo2ZWJxcDduUzBBRnV6TGNQN3k2T2d2M1RXTXYtQzBOZXcwSW1RN0JuN0NyRGVzdF95YjNZMDE5QVlJT1NpdnY?oc=5",
        "published_at": "2024-10-02T13:02:14+00:00",
        "category": "health",
        "news": "Chinese scientists have made a groundbreaking breakthrough in the treatment of Type 1 diabetes, successfully reversing the condition in a woman using a stem cell transplant. This achievement marks a world first and offers a glimmer of hope for millions suffering from the disease.\n\nWhile this initial success is exciting, experts in India emphasize the need for further research and caution against premature celebration. The long-term efficacy and safety of this treatment remain to be determined through extensive clinical trials. \n\nThe use of stem cells, particularly the patient's own, holds immense potential for regenerative medicine, but challenges remain in scaling up the process and ensuring widespread accessibility."
    },
    {
        "title": "Toxic Work Culture in India: Zoho CEO Warns of \"Pressure Cooker\" Environment",
        "description": "Vembu's comments come at a time when there has been a spate of incidents wherein young employees lost their lives to excessive work load.",
        "url": "https://www.businesstoday.in/latest/corporate/story/throwing-people-into-a-very-big-pressure-cooker-sridhar-vembu-on-toxic-work-culture-in-indian-companies-448458-2024-10-02?utm_source=rssfeed",
        "published_at": "2024-10-02T11:42:44+00:00",
        "category": "business",
        "news": "Zoho CEO and co-founder Sridhar Vembu has criticized the toxic work culture prevalent in Indian companies, comparing it to \"throwing people into a very big pressure cooker.\" He argues that excessive workloads and unhealthy work environments are unsustainable and lead to burnout, citing recent tragedies where young employees have died by suicide due to work-related stress.\n\nVembu highlights the factors contributing to this issue, including long working hours, loneliness experienced by young professionals migrating to big cities, and lengthy commutes. He emphasizes the importance of a balanced work environment for building sustainable organizations and promoting employee well-being.\n\nHis comments come in the wake of several high-profile cases. In July 2024, 26-year-old Anna Sebastian Perayil, an employee of SR Batliboi (an Ernst & Young member firm), died due to what her mother attributed to work stress.  More recently, Tarun Saxena, a young employee of Bajaj Finance, took his own life after citing extreme work pressure and threats of salary deductions in a suicide note. Both incidents have sparked widespread concern and calls for action against toxic work practices in India."
    },
    {
        "title": "Aamir Khan Offers Condolences to Ex-Wife Reena Dutta After Her Father's Death",
        "description": "Emotional Aamir Khan Visits Ex Wife Reena Dutta After Her Father's Death, Offers Condolences | Video&nbsp;&nbsp;News18Aamir Khan and his mother visit Reena Dutta’s house after her father’s demise&nbsp;&nbsp;TOI EtimesAamir Khan, mother visit ex-wife Reena Dutta after her father's death&nbsp;&nbsp;Hindustan TimesAamir Khan offers condolences after ex-wife Reena Dutta’s father passes away&nbsp;&nbsp;The Indian ExpressAamir Khan, Along With Mother Zeenat Hussain, Visit Ex-Wife Reena Dutta After Her Father's Death&nbsp;&nbsp;NDTV Movies",
        "url": "https://news.google.com/rss/articles/CBMi1gFBVV95cUxPVDJXazBxMjRhMzNZQTBpWHpEYnM1S2tyTlZfY2ZyNEpxT3ROMVBQNVdjUWtOOVVNc0lwdGxjaFEwOTlzWWFBUUt2b2hxY0tZQ21teGJlbVJLMnU2RC1OREwxNkdqRi05TmNma0swUWZPWUNCaUktOEhEQ0NOMWhoZ2ZFUHdBNDdtaE1ZMEU3MjBGd3FOdWtXUGpoX0xDeV9NWmV6Ni1vdnlwVWUzYlVscFBQd2p1MnBtY1ZZMlhXSkl1SC1HalZQVUZZdU56alo5bDROMTVB0gHbAUFVX3lxTE9qZEdpU1RFSEw1QXpaWGxMSm8tTUpneDhRZVY3aW9fam1nQVpudlBJN3R6U3Fhc3c2TGhSejUwWXY3dmtVcnFydjFqMXJCSXNleGJISUk3TmRMbXRDRUVhdm9Hd1pnWlQ2azBfeGFnQ2dVUlpOcWVGZVN4ODRkZEtWUWt0T1VoVjNoOFFyeXlqUUFSRm9Id3R6ZS1TN2pKYVpnZjYxUFRjeVZJSFRyamJpNDFPeHBaVVhXY1ltc2VBb0Z6cDdVM2FXSFNnTkhKV042anRDalZjTURBcw?oc=5",
        "published_at": "2024-10-02T11:17:29+00:00",
        "category": "entertainment",
        "news": "Bollywood actor Aamir Khan visited the home of his former wife, Reena Dutta, to offer his condolences following the death of her father. The visit was a touching display of support and respect between the two. \n\nAccompanied by his mother, Zeenat Hussain, Aamir was photographed arriving at Reena's residence. The news of the visit was widely reported by Indian media outlets including The Times of India, Hindustan Times, The Indian Express, and NDTV Movies.  \n\nWhile the details of Reena's father's passing were not publicly shared, the gesture from Aamir highlights the continued respect and friendship he holds for his former spouse despite their separation."
    },
    {
        "title": "Oxygen: A Global Health Lifeline - WHO Webinar Highlights Crucial Role",
        "description": "Webinar: The crucial rule of oxygen in global health&nbsp;&nbsp;World Health Organization (WHO)View Full coverage on Google News",
        "url": "https://news.google.com/rss/articles/CBMiwgFBVV95cUxNYXRxUlJHempCeU9WeF90MGhzR2ExYTcweVRuU3JjY2l2VU5GeGJPNGtJdTYzRi11a1V5dEZQRzhTTGpjcTZpNjRycTZrTmtrWWE4STcwS2dvY1B1LVlzQzNReW1fZExfeGU4ZEtuN3VOb1o2VVVjX2tQVTc3Vi1pcG5kQzZWczQ1MXlOTTZtRlM5LU9KcWp1a19KbzlJV0xZVkY5RVpqdGtPNGJ6cFQ3Q1RFOTY2T0VtdGlaUVRndzI0QQ?oc=5",
        "published_at": "2024-10-02T10:52:08+00:00",
        "category": "health",
        "news": "The World Health Organization (WHO) recently hosted a webinar focusing on the critical role of oxygen in global health. While details of the specific content are not available without access to the Google News coverage, the title itself emphasizes the crucial nature of oxygen access for global health outcomes. \n\nOxygen is essential for life, and its availability is a major factor in healthcare systems worldwide. The webinar likely explored the following:\n\n* **Challenges in ensuring equitable access to oxygen:** This might include issues related to infrastructure, affordability, and availability in low-resource settings.\n* **The impact of oxygen shortages on health outcomes:** This could encompass the link between oxygen deficiency and complications, mortality rates, and the overall burden of disease.\n* **Strategies to improve oxygen access and utilization:**  The webinar may have presented solutions and recommendations to address the challenges in oxygen access, such as technological advancements, policy changes, and capacity building.\n\nThe WHO's focus on oxygen highlights its recognition of this fundamental component of healthcare. The webinar likely offered valuable insights for policymakers, healthcare professionals, and other stakeholders striving to improve global health outcomes."
    },
    {
        "title": "Desperate Man Robs Bank in Bizarre Uttar Pradesh Incident",
        "description": "After entering the manager's office urgently, he informed him that he owed Rs 38.5 lakh on his home loan. He warned that if he didn't pay the money immediately, his house would be sold at auction",
        "url": "https://www.businesstoday.in/latest/trends/story/bizzare-up-robbery-man-enters-bank-with-suicide-note-loots-rs-40-lakhs-flees-448446-2024-10-02?utm_source=rssfeed",
        "published_at": "2024-10-02T08:03:31+00:00",
        "category": "business",
        "news": "A man armed with a firearm robbed Rs 40 lakh from an Axis Bank branch in Shamli district, Uttar Pradesh on Tuesday. The robbery, which took place in broad daylight, involved the man entering the bank manager's office and threatening suicide. \n\nThe robber claimed he owed Rs 38.5 lakh on his home loan and feared his house would be auctioned off if he didn't repay the debt. He expressed concern for his children's future and claimed he needed the money to avoid losing his home. \n\nThe man, who was masked, held the bank manager at gunpoint and demanded the cash. After receiving the money, he escaped on a motorcycle. \n\nPolice are currently investigating the incident and have gathered CCTV footage from the bank. They are questioning bank staff to gather more information about the robbery."
    },
    {
        "title": "No More Anti-Profiteering Cases Under GST After April 1st, 2025",
        "description": "The principal bench of the GSTAT will hear ongoing anti profiteering complaints, taking over from the Competition Commission of India.",
        "url": "https://www.businesstoday.in/latest/economy/story/no-new-anti-profiteering-cases-to-be-taken-up-under-gst-from-april-1-448443-2024-10-02?utm_source=rssfeed",
        "published_at": "2024-10-02T07:56:07+00:00",
        "category": "business",
        "news": "The Indian government has announced that no new anti-profiteering cases will be accepted under the Goods and Services Tax (GST) after April 1st, 2025. This marks the end of a provision aimed at ensuring businesses pass on tax benefits to consumers through lower prices.\n\nWhile the acceptance of new cases will cease, ongoing anti-profiteering cases will continue to be handled by the Goods and Services Tax Appellate Tribunal (GSTAT), taking over from the Competition Commission of India (CCI). The GSTAT will now be responsible for examining whether businesses have actually reduced prices commensurately with input tax credits or reduced tax rates. \n\nThis move aims to streamline the process and provide businesses with greater flexibility in pricing their goods and services. The shift in jurisdiction is also expected to reduce the burden on the CCI and ensure cases are handled by tax-specific mechanisms."
    },
    {
        "title": "Apple Accused of Illegal Workplace Rules by US Labor Board",
        "description": "The complaint accuses Apple of \"interfering with, restraining, and coercing employees in the exercise of\" their rights under federal labor law.",
        "url": "https://www.businesstoday.in/latest/corporate/story/apple-accused-by-us-labour-board-of-imposing-illegal-workplace-rules-448441-2024-10-02?utm_source=rssfeed",
        "published_at": "2024-10-02T07:22:31+00:00",
        "category": "business",
        "news": "The National Labor Relations Board (NLRB) has filed a complaint against Apple, alleging the tech giant violated employee rights by enforcing unlawful workplace rules. The complaint, issued on Monday, claims Apple imposed overly broad confidentiality, non-disclosure, and non-compete agreements, along with restrictive misconduct and social media policies. \n\nThe NLRB argues these rules \"interfere with, restrain, and coerce employees in the exercise of\" their rights under federal labor law, particularly the right to organize and advocate for better working conditions. \n\nApple has denied the allegations, stating it respects employee rights to discuss wages and working conditions. The company plans to contest the claims at a hearing scheduled for January. \n\nThe complaint stems from charges filed in 2021 by former Apple employee Ashley Gjovik. Gjovik alleged that Apple's rules, including those regarding confidentiality and social media, prevented employees from discussing issues like pay equity and discrimination. \n\nThe NLRB is seeking to force Apple to rescind the allegedly unlawful rules and notify its entire US workforce of their legal rights. This case adds to a growing number of labor disputes facing Apple, with several other NLRB cases and a lawsuit filed by Gjovik alleging retaliation."
    },
    {
        "title": "Aamir Khan Shows Support, Padmapriya Speaks Out: Entertainment News October 2, 2024",
        "description": "Latest entertainment News, Live Updates Today October 2, 2024: Aamir Khan, mother visit ex-wife Reena Dutta after her father's death&nbsp;&nbsp;Hindustan TimesI lost many movies when I complained against director who slapped me on the set: Padmapriya&nbsp;&nbsp;OnmanoramaPadmapriya says Tamil film director slapped her publicly, but media blamed her: ‘No one questioned why…’&nbsp;&nbsp;Hindustan TimesWhen a woman talks about issues, she is dragged into controversy, says Padmapriya&nbsp;&nbsp;The HinduTamil filmmaker slapped me publicly: Actor Padmapriya&nbsp;&nbsp;The Times of India",
        "url": "https://news.google.com/rss/articles/CBMivAFBVV95cUxOUWFxTUJIM2NkT2RBTzdxYzBibkxMTFN2MGlYWWM1dGpRMWlBNTdBazY2NjFjbzIzTllCTGxxUFBuTjBGWkJMRDNNNENkanM4emlyQnFrT2ktd0l1cmx2MVpxRmJUSmc3TUNhRWNGbm10TlNNY3JmV0dXcWVzRzVTZEFZUnVldVBZbWR2emp4Y3VUYzQxRmtwUnY2ZDJVYlpSVE05MjB3NmNfOHlVNkx1UG9QWUVuOFEzQ250a9IBwgFBVV95cUxQek5EbjNEM2dJb2otM1FaZ05TT0RWMlNXOEVFUXhhM3F1ZEwyTEJEVnFhVGU5MHpLV0JNMFBtWVRMRTB1OUZhMVQ3dWhROUYtdzhfWkFRNDhjblRvMkcwQ2NvdDF1MFlWTi1vVlNrUUNlaUh6ckhna1JzYUtBcTdaR2pRaXlvXzI1b2ZVUU5QYjhIUkIyUHpSSDVTX1dhQTNPNDVvWW1XZGR3dmtTeVJVRXlUX29lOUJlZlM0aEg5TWNmQQ?oc=5",
        "published_at": "2024-10-02T06:58:21+00:00",
        "category": "entertainment",
        "news": "**Aamir Khan and his mother paid a visit to his ex-wife Reena Dutta, following the passing of her father.** The gesture of support highlights the continued bond between the former couple despite their separation. \n\n**Meanwhile, actress Padmapriya has revealed a disturbing incident from her past, claiming a Tamil film director publicly slapped her on set.** The incident, which she says led to her losing several film opportunities,  highlights the systemic silencing of women in the industry.  Padmapriya has spoken out against the media's initial response, which she feels blamed her for the situation.  She emphasizes the need for accountability and a culture of respect for women in the film industry."
    },
    {
        "title": "Zero Brokerage Plans Facing the Axe: Regulatory Changes and Revenue Hits",
        "description": "Angel One, India's third-largest brokerage by client count, introduced a flat fee of ₹20 or 0.1% of turnover (whichever is lower) on cash market transactions starting November 1, anticipating a drop in revenues from the derivative segment. Previously, these transactions were free of charge.",
        "url": "https://economictimes.indiatimes.com/markets/stocks/news/zero-brokerage-plans-nearing-expiry/articleshow/113866945.cms",
        "published_at": "2024-10-02T02:26:39+00:00",
        "category": "business",
        "news": "The era of zero-brokerage plans in India may be coming to an end.  Following recent regulatory changes, discount brokers are facing a significant revenue crunch, forcing them to re-evaluate their pricing models. \n\nAngel One, the country's third-largest brokerage, has already announced a flat fee of ₹20 or 0.1% of turnover (whichever is lower) for cash market transactions starting November 1. Previously, these transactions were free. \n\nThis shift comes in response to the Securities and Exchange Board of India (SEBI) circular, which mandates uniform transaction levies across all market participants, including brokers and exchanges. This means that the volume-based discounts previously enjoyed by large brokers will be eliminated, impacting their earnings.\n\n\"The changing environment makes it difficult for the broking industry to survive on such low fees,\" said Dhiraj Relli, MD of HDFC Securities.  \"Fees will have to increase, especially for discount broking firms.\"\n\nExperts predict that the new regulations could lead to a loss of over ₹2,000 crore in brokerage income, with discount platforms bearing the brunt of the impact.  This move could also lead to a decline in trading volumes as investors face higher transaction costs.\n\nZerodha, another major discount broker, has acknowledged the impending revenue hit, but currently, they are not changing their pricing. However, their founder, Nithin Kamath, anticipates a 30% to 50% drop in revenue due to tighter rules on index derivatives, a significant revenue stream for the company. \n\nThe shift away from zero-brokerage plans marks a significant development in the Indian brokerage industry, forcing brokers to adapt to a new pricing landscape and potentially impacting the accessibility of financial markets for individual investors."
    }
]